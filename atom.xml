<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kezunlin&#39;s Blog</title>
  
  <subtitle>Live and Learn</subtitle>
  <link href="https://kezunlin.me/atom.xml" rel="self"/>
  
  <link href="https://kezunlin.me/"/>
  <updated>2024-10-15T09:25:27.804Z</updated>
  <id>https://kezunlin.me/</id>
  
  <author>
    <name>kezunlin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Back Again</title>
    <link href="https://kezunlin.me/blog/back-again/"/>
    <id>https://kezunlin.me/blog/back-again/</id>
    <published>2024-10-14T04:30:00.000Z</published>
    <updated>2024-10-15T09:25:27.804Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="web" scheme="https://kezunlin.me/categories/web/"/>
    
    
    <category term="hexo" scheme="https://kezunlin.me/tags/hexo/"/>
    
    <category term="hexo-next" scheme="https://kezunlin.me/tags/hexo-next/"/>
    
    <category term="nodejs" scheme="https://kezunlin.me/tags/nodejs/"/>
    
    <category term="node" scheme="https://kezunlin.me/tags/node/"/>
    
    <category term="npm" scheme="https://kezunlin.me/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>install windows wechat on ubuntu 16.04</title>
    <link href="https://kezunlin.me/blog/install-windows-wechat-on-ubuntu-16-04/"/>
    <id>https://kezunlin.me/blog/install-windows-wechat-on-ubuntu-16-04/</id>
    <published>2020-06-05T01:35:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="wechat"><a href="#wechat" class="headerlink" title="wechat"></a>wechat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget -O- https://deepin-wine.i-m.dev/setup.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> apt-get install deepin.com.wechat</span><br><span class="line"><span class="comment">#版本还是比较新的，这下比网页版微信方便多了。（发帖时Windows上的微信最新是2.8.0版）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装QQ只需要一条命令：</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install deepin.com.qq.im</span><br></pre></td></tr></table></figure><h3 id="screen-recorder"><a href="#screen-recorder" class="headerlink" title="screen recorder"></a>screen recorder</h3><h4 id="obs"><a href="#obs" class="headerlink" title="obs"></a>obs</h4><p>see <a href="https://obsproject.com/">obs</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ffmpeg</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:obsproject/obs-studio</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install obs-studio</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;06&#x2F;05: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h3 id=&quot;wechat&quot;&gt;&lt;a href=&quot;#wechat&quot; class=&quot;headerlink&quot; title=&quot;w</summary>
      
    
    
    
    <category term="ubuntu" scheme="https://kezunlin.me/categories/ubuntu/"/>
    
    
    <category term="wechat" scheme="https://kezunlin.me/tags/wechat/"/>
    
    <category term="deepin-wine" scheme="https://kezunlin.me/tags/deepin-wine/"/>
    
  </entry>
  
  <entry>
    <title>tutorial to install and configure deep learning environments on ubuntu 18.04</title>
    <link href="https://kezunlin.me/blog/tutorial-to-install-and-configure-deep-learning-environments-on-ubuntu-18-04/"/>
    <id>https://kezunlin.me/blog/tutorial-to-install-and-configure-deep-learning-environments-on-ubuntu-18-04/</id>
    <published>2020-06-04T02:34:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h2 id="prepare-ubuntu-18-04"><a href="#prepare-ubuntu-18-04" class="headerlink" title="prepare ubuntu 18.04"></a>prepare ubuntu 18.04</h2><blockquote><p>主机支持8个口才能使用GeForce RTX 2080 Ti(11GB显存)<br>Ubuntu 18.04(刻录Ubuntu 18.04系统并通过U盘安装.)<br>Mem: 64GB<br>CPU: 2 core 10<br>GPU: RTX 2080 Ti</p></blockquote><h2 id="download"><a href="#download" class="headerlink" title="download"></a>download</h2><ul><li>Anaconda3-2019.03-Linux-x86_64.sh</li></ul><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get -y install openssh-server</span><br><span class="line"><span class="built_in">sudo</span> ap-get -y install net-tools</span><br><span class="line"><span class="built_in">sudo</span> ifconfig</span><br><span class="line"><span class="comment"># 192.168.0.114</span></span><br></pre></td></tr></table></figure><h2 id="install-packages"><a href="#install-packages" class="headerlink" title="install packages"></a>install packages</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt -y install git vim tree build-essential cmake-gui</span><br><span class="line"><span class="built_in">sudo</span> apt-get -y install libleveldb-dev liblmdb-dev libsnappy-dev libhdf5-serial-dev </span><br><span class="line"><span class="built_in">sudo</span> apt-get -y install libopenblas-dev liblapack-dev libatlas-base-dev</span><br><span class="line">apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler</span><br><span class="line">apt-get install --no-install-recommends libboost-all-dev</span><br><span class="line"><span class="built_in">sudo</span> apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev</span><br></pre></td></tr></table></figure><h2 id="Nvidia-driver"><a href="#Nvidia-driver" class="headerlink" title="Nvidia driver"></a>Nvidia driver</h2><ul><li>see <a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#runfile-nouveau">nvidia driver</a></li><li>see <a href="https://kezunlin.me/post/3f33896b/">install and configure cuda 9.2 with cudnn 7.1 on ubuntu 16.04</a></li></ul><h3 id="Disable-the-Nouveau-drivers"><a href="#Disable-the-Nouveau-drivers" class="headerlink" title="Disable the Nouveau drivers"></a>Disable the Nouveau drivers</h3><p>To install the Display Driver, the Nouveau drivers must first be disabled. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nouveau is loaded</span></span><br><span class="line">lsmod | grep nouveau</span><br><span class="line"></span><br><span class="line">vim /etc/modprobe.d/blacklist-nouveau.conf </span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#Regenerate the kernel initramfs:</span></span><br><span class="line"><span class="built_in">sudo</span> update-initramfs -u</span><br><span class="line"><span class="built_in">sudo</span> reboot </span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot and verify that the Nouveau drivers are not loaded.</span></span><br><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure><h3 id="install-driver-by-CUDA-linux-run-not"><a href="#install-driver-by-CUDA-linux-run-not" class="headerlink" title="install driver by CUDA_linux.run(not)"></a><del>install driver by CUDA_linux.run(not)</del></h3><p>The Runfile installation installs the NVIDIA Driver, the CUDA Toolkit, and CUDA Samples, via an interactive ncurses-based interface.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get purge nvidia-*</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> ./cuda_10.1.243_418.87.00_linux.run --<span class="built_in">help</span></span><br><span class="line"><span class="built_in">sudo</span> ./cuda_10.1.243_418.87.00_linux.run --driver</span><br><span class="line"></span><br><span class="line"><span class="comment"># test </span></span><br><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;var&#x2F;log&#x2F;nvidia-installer.log<br>&#x2F;var&#x2F;log&#x2F;cuda-installer.log</p></blockquote><blockquote><p>ERROR: The Nouveau kernel driver is currently in use by your system.  This driver is incompatible with the NVIDIA driver, and must be disabled before proceeding. </p></blockquote><h3 id="install-driver-by-PPA-推荐"><a href="#install-driver-by-PPA-推荐" class="headerlink" title="install driver by PPA(推荐)"></a>install driver by PPA(推荐)</h3><p>see <a href="https://linuxhint.com/ubuntu_nvidia_ppa/">ubuntu_nvidia_ppa</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:graphics-drivers/ppa</span><br><span class="line">sudp apt-get update</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> apt-cache search nvidia-driver-*</span><br><span class="line"><span class="comment"># nvidia-driver-418</span></span><br><span class="line"><span class="comment"># nvidia-driver-440</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> apt-get -y install nvidia-driver-440</span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><h3 id="check-dirver"><a href="#check-dirver" class="headerlink" title="check dirver"></a>check dirver</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br><span class="line">Thu Jun  4 17:12:59 2020       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 440.82       Driver Version: 440.82       CUDA Version: 10.2     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  GeForce RTX 208...  Off  | 00000000:17:00.0 Off |                  N/A |</span><br><span class="line">| 30%   42C    P8    19W / 250W |      1MiB / 11019MiB |      0%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   1  GeForce RTX 208...  Off  | 00000000:65:00.0  On |                  N/A |</span><br><span class="line">| 31%   44C    P8    10W / 250W |     80MiB / 11018MiB |      0%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|    1      1309      G   /usr/lib/xorg/Xorg                            21MiB |</span><br><span class="line">|    1      1399      G   /usr/bin/gnome-shell                          56MiB |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="cuda-toolkit-9-1"><a href="#cuda-toolkit-9-1" class="headerlink" title="cuda-toolkit(9.1)"></a><del>cuda-toolkit(9.1)</del></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install nvidia-cuda-toolkit</span><br><span class="line"></span><br><span class="line">nvcc -V</span><br><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2017 NVIDIA Corporation</span><br><span class="line">Built on Fri_Nov__3_21:07:56_CDT_2017</span><br><span class="line">Cuda compilation tools, release 9.1, V9.1.85</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./Anaconda3-2019.03-Linux-x86_64.sh </span><br><span class="line">[<span class="built_in">yes</span>]</span><br><span class="line">[<span class="built_in">yes</span>]</span><br></pre></td></tr></table></figure><h3 id="install-torch"><a href="#install-torch" class="headerlink" title="install torch"></a>install torch</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py37 python==3.7</span><br><span class="line">conda activate py37</span><br><span class="line"></span><br><span class="line">conda install -y pytorch torchvision</span><br></pre></td></tr></table></figure><h3 id="opencv"><a href="#opencv" class="headerlink" title="opencv"></a>opencv</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-contrib-python</span><br><span class="line"></span><br><span class="line">python</span><br><span class="line">Python 3.7.0 (default, Oct  9 2018, 10:31:47) </span><br><span class="line">[GCC 7.3.0] :: Anaconda, Inc. on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import cv2</span><br><span class="line">&gt;&gt;&gt; cv2.__version__</span><br><span class="line"><span class="string">&#x27;4.2.0&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="qt"><a href="#qt" class="headerlink" title="qt"></a>qt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pyqt</span><br></pre></td></tr></table></figure><h2 id="other-libraries"><a href="#other-libraries" class="headerlink" title="other libraries"></a>other libraries</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;06&#x2F;04: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h2 id=&quot;prepare-ubuntu-18-04&quot;&gt;&lt;a href=&quot;#prepare-ubuntu-18-04&quot;</summary>
      
    
    
    
    <category term="ubuntu" scheme="https://kezunlin.me/categories/ubuntu/"/>
    
    
    <category term="deep learning" scheme="https://kezunlin.me/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>enable WSL on Windows 10 and install Ubuntu 16.04 Ubuntu 18.04</title>
    <link href="https://kezunlin.me/blog/enable-WSL-on-Windows-10-and-install-Ubuntu-16-04-Ubuntu-18-04/"/>
    <id>https://kezunlin.me/blog/enable-WSL-on-Windows-10-and-install-Ubuntu-16-04-Ubuntu-18-04/</id>
    <published>2020-03-20T08:28:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WLS-for-windows"><a href="#WLS-for-windows" class="headerlink" title="WLS for windows"></a>WLS for windows</h2><ul><li>Enable WSL for Windows</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start powershell as admin</span></span><br><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br><span class="line"></span><br><span class="line"><span class="comment"># or by 控制面板的&quot;启动或关闭Windows功能&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重启电脑</span></span><br></pre></td></tr></table></figure><ul><li>Microsoft Store - Search Ubuntu16.04&#x2F;Ubuntu18.04 and Install</li><li>CMD+R  \wsl$</li><li>VS Code + WSL Bash (CMD,Powershell)</li></ul><p>windows 10 配置默认Linux发行版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmd&gt; wsl</span><br><span class="line">cmd&gt; wslconfig /l</span><br><span class="line">Ubuntu-16.04(默认)</span><br><span class="line">Ubuntu-18.04</span><br><span class="line"></span><br><span class="line">cmd&gt; wslconfig /s Ubuntu-18.04</span><br><span class="line">Ubuntu-18.04(默认)</span><br><span class="line">Ubuntu-16.04</span><br></pre></td></tr></table></figure><p>卸载WSL Ubuntu 16.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Windows Search ---- Ubuntu 16.04 LTS --- 菜单选择卸载</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check if uninstall successfully</span></span><br><span class="line">cmd&gt; wslconfig /s Ubuntu-18.04</span><br><span class="line">Ubuntu-18.04(默认)</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;3&#x2F;20: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;WLS-for-windows&quot;&gt;&lt;a href=&quot;#WLS-for-windows&quot; class=&quot;headerlink&quot; title=&quot;WLS for windows&quot;&gt;&lt;/a&gt;WLS for windows&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Enable WSL f</summary>
      
    
    
    
    <category term="window" scheme="https://kezunlin.me/categories/window/"/>
    
    
    <category term="WSL" scheme="https://kezunlin.me/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>python atexit and CTRL-C CTRL-Z signal handler</title>
    <link href="https://kezunlin.me/blog/python-atexit-and-CTRL-C-CTRL-Z-signal-handler/"/>
    <id>https://kezunlin.me/blog/python-atexit-and-CTRL-C-CTRL-Z-signal-handler/</id>
    <published>2020-03-20T08:26:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h2 id="atexit"><a href="#atexit" class="headerlink" title="atexit"></a>atexit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">exit_handler</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;exit&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">import atexit</span></span><br><span class="line"><span class="string">atexit.register(exit_handler)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if __name__ == &#x27;__main__&#x27;:</span></span><br><span class="line"><span class="string">    print(&quot;</span>OK)</span><br></pre></td></tr></table></figure><h2 id="ctrl-c-ctrl-z"><a href="#ctrl-c-ctrl-z" class="headerlink" title="ctrl+c&#x2F; ctrl+z"></a>ctrl+c&#x2F; ctrl+z</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handler</span>(<span class="params">signal_received, frame</span>):</span><br><span class="line">    <span class="comment"># Handle any cleanup here</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;SIGINT or CTRL-C detected. Exiting gracefully&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># Tell Python to run the handler() function when SIGINT is recieved</span></span><br><span class="line">    signal.signal(signal.SIGINT, <span class="variable language_">self</span>.ctrl_exit_handler) <span class="comment"># ctlr + c</span></span><br><span class="line">    signal.signal(signal.SIGTSTP, <span class="variable language_">self</span>.ctrl_exit_handler) <span class="comment"># ctlr + z</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Running. Press CTRL-C to exit.&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># Do nothing and hog CPU forever until SIGINT received.</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;3&#x2F;20: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h2 id=&quot;atexit&quot;&gt;&lt;a href=&quot;#atexit&quot; class=&quot;headerlink&quot; title=&quot;a</summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="atexit" scheme="https://kezunlin.me/tags/atexit/"/>
    
    <category term="signal" scheme="https://kezunlin.me/tags/signal/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 16.04 18.04 sources.list</title>
    <link href="https://kezunlin.me/blog/ubuntu-16-04-18-04-sources-list/"/>
    <id>https://kezunlin.me/blog/ubuntu-16-04-18-04-sources-list/</id>
    <published>2020-03-20T08:20:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="Ubuntu-16-04"><a href="#Ubuntu-16-04" class="headerlink" title="Ubuntu 16.04"></a>Ubuntu 16.04</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br></pre></td></tr></table></figure><h3 id="Ubuntu-18-04"><a href="#Ubuntu-18-04" class="headerlink" title="Ubuntu 18.04"></a>Ubuntu 18.04</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;3&#x2F;20: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h3 id=&quot;Ubuntu-16-04&quot;&gt;&lt;a href=&quot;#Ubuntu-16-04&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="ubuntu" scheme="https://kezunlin.me/categories/ubuntu/"/>
    
    
    <category term="apt" scheme="https://kezunlin.me/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>using pyppetter to scrap dynamic javascript web content</title>
    <link href="https://kezunlin.me/blog/using-pyppetter-to-scrap-dynamic-javascript-web-content/"/>
    <id>https://kezunlin.me/blog/using-pyppetter-to-scrap-dynamic-javascript-web-content/</id>
    <published>2020-01-17T00:34:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pyppetter"><a href="#pyppetter" class="headerlink" title="pyppetter"></a>pyppetter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3 -c &#x27;import pyppeteer; pyppeteer.chromium_downloader.download_chromium()&#x27;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># [W:pyppeteer.chromium_downloader] chromium extracted to: /home/ubuntu/.local/share/pyppeteer/local-chromium/575458</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="demo-1"><a href="#demo-1" class="headerlink" title="demo 1"></a>demo 1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&#x27;http://quotes.toscrape.com/js/&#x27;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">doc = pq(response.text)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Quotes:&#x27;</span>, doc(<span class="string">&#x27;.quote&#x27;</span>).length)</span><br></pre></td></tr></table></figure><p>0 </p><h3 id="demo-2"><a href="#demo-2" class="headerlink" title="demo 2"></a>demo 2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    browser = <span class="keyword">await</span> launch()</span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://quotes.toscrape.com/js/&#x27;</span>)</span><br><span class="line">    doc = pq(<span class="keyword">await</span> page.content())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Quotes:&#x27;</span>, doc(<span class="string">&#x27;.quote&#x27;</span>).length)</span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"> </span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure><p>10</p><h3 id="demo-3"><a href="#demo-3" class="headerlink" title="demo 3"></a>demo 3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    browser = <span class="keyword">await</span> launch()</span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://quotes.toscrape.com/js/&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> page.screenshot(path=<span class="string">&#x27;example.png&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> page.pdf(path=<span class="string">&#x27;example.pdf&#x27;</span>)</span><br><span class="line">    dimensions = <span class="keyword">await</span> page.evaluate(<span class="string">&#x27;&#x27;&#x27;() =&gt; &#123;</span></span><br><span class="line"><span class="string">        return &#123;</span></span><br><span class="line"><span class="string">            width: document.documentElement.clientWidth,</span></span><br><span class="line"><span class="string">            height: document.documentElement.clientHeight,</span></span><br><span class="line"><span class="string">            deviceScaleFactor: window.devicePixelRatio,</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;&#x27;&#x27;&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(dimensions)</span><br><span class="line">    <span class="comment"># &gt;&gt;&gt; &#123;&#x27;width&#x27;: 800, &#x27;height&#x27;: 600, &#x27;deviceScaleFactor&#x27;: 1&#125;</span></span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"> </span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure><h3 id="demo-4"><a href="#demo-4" class="headerlink" title="demo 4"></a>demo 4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> pyppeteer <span class="keyword">import</span> launch</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># https://github.com/miyakogi/pyppeteer/issues/171</span></span><br><span class="line">    browser = <span class="keyword">await</span> launch(&#123;</span><br><span class="line">            <span class="string">&#x27;args&#x27;</span>: [<span class="string">&#x27;--no-sandbox&#x27;</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    page = <span class="keyword">await</span> browser.newPage()</span><br><span class="line">    url=<span class="string">&quot;http://127.0.0.1:5000/tool?1784076_1_1_1_1_1&quot;</span></span><br><span class="line">    <span class="keyword">await</span> page.goto(url)</span><br><span class="line">    <span class="comment">#await page.waitFor(3000) # wait for 3 seconds</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#===================================================</span></span><br><span class="line">    <span class="comment"># JS逻辑, 如果echart图像render finished,则在html页面中动态添加echartReadyDiv</span></span><br><span class="line">    <span class="comment"># 表示图像ready，可以download/send to server.</span></span><br><span class="line">    <span class="keyword">await</span> page.waitForSelector(<span class="string">&#x27;#echartReadyDiv&#x27;</span>)</span><br><span class="line">    <span class="comment">#===================================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 页面渲染完毕后，开始截图</span></span><br><span class="line">    <span class="comment"># 如果没有加载完毕就生产image了，内容不完整</span></span><br><span class="line">    <span class="keyword">await</span> page.screenshot(path=<span class="string">&#x27;example.png&#x27;</span>) </span><br><span class="line">    <span class="comment">#await page.pdf(path=&#x27;example.pdf&#x27;)</span></span><br><span class="line">    dimensions = <span class="keyword">await</span> page.evaluate(<span class="string">&#x27;&#x27;&#x27;() =&gt; &#123;</span></span><br><span class="line"><span class="string">        return &#123;</span></span><br><span class="line"><span class="string">            width: document.documentElement.clientWidth,</span></span><br><span class="line"><span class="string">            height: document.documentElement.clientHeight,</span></span><br><span class="line"><span class="string">            deviceScaleFactor: window.devicePixelRatio,</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;&#x27;&#x27;&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(dimensions)</span><br><span class="line">    <span class="comment"># &gt;&gt;&gt; &#123;&#x27;width&#x27;: 800, &#x27;height&#x27;: 600, &#x27;deviceScaleFactor&#x27;: 1&#125;</span></span><br><span class="line">    <span class="keyword">await</span> page.close()</span><br><span class="line">    <span class="keyword">await</span> browser.close()</span><br><span class="line"> </span><br><span class="line">asyncio.get_event_loop().run_until_complete(main())</span><br></pre></td></tr></table></figure><p>Page APIs:</p><ul><li>page.waitFor(3000) # wait for 3 seconds</li><li>page.waitForSelector(‘#echartReadyDiv’) # wait for selector</li><li>page.page.waitForXPath(‘&#x2F;&#x2F;*[@id&#x3D;”echartReadyDiv”]’) # wait for xpath</li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/miyakogi/pyppeteer">pyppeteer</a></li><li><a href="https://github.com/puppeteer/puppeteer/blob/master/docs/api.md">puppetter Page APIs</a></li><li><a href="https://github.com/puppeteer/puppeteer/issues/4546">puppetter waitFor issues</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;1&#x2F;17: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;pyppetter&quot;&gt;&lt;a href=&quot;#pyppetter&quot; class=&quot;headerlink&quot; title=&quot;pyppetter&quot;&gt;&lt;/a&gt;pyppetter&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="pyppetter" scheme="https://kezunlin.me/tags/pyppetter/"/>
    
    <category term="puppetter" scheme="https://kezunlin.me/tags/puppetter/"/>
    
    <category term="selenium" scheme="https://kezunlin.me/tags/selenium/"/>
    
    <category term="waitFor" scheme="https://kezunlin.me/tags/waitFor/"/>
    
  </entry>
  
  <entry>
    <title>crate graph with dot file using graphviz on linux</title>
    <link href="https://kezunlin.me/blog/crate-graph-with-dot-file-using-graphviz-on-linux/"/>
    <id>https://kezunlin.me/blog/crate-graph-with-dot-file-using-graphviz-on-linux/</id>
    <published>2020-01-17T00:28:50.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="dot"><a href="#dot" class="headerlink" title="dot"></a>dot</h2><p>input.dot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph demo&#123;</span><br><span class="line">    1 -- 2</span><br><span class="line">    2 -- 3</span><br><span class="line">    3 -- 4</span><br><span class="line">    1 -- 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dot -Tpng input.dot &gt; out.png<br>dot -Tps input.dot &gt; output.eps</p><p>view results<br><img src="https://kezunlin.me/images/posts/1864218-20200117083221334-46055166.png" alt="out.png"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://graphviz.org/">graphviz.org</a></li><li><a href="https://www.linux.com/news/create-relationship-diagrams-graphviz/">create-relationship-diagrams-graphviz</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;1&#x2F;17: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;dot&quot;&gt;&lt;a href=&quot;#dot&quot; class=&quot;headerlink&quot; title=&quot;dot&quot;&gt;&lt;/a&gt;dot&lt;/h2&gt;&lt;p&gt;input.dot&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c</summary>
      
    
    
    
    <category term="linux" scheme="https://kezunlin.me/categories/linux/"/>
    
    
    <category term="dot" scheme="https://kezunlin.me/tags/dot/"/>
    
    <category term="graphviz" scheme="https://kezunlin.me/tags/graphviz/"/>
    
  </entry>
  
  <entry>
    <title>running cronjob using crontab on ubuntu linux</title>
    <link href="https://kezunlin.me/blog/running-cronjob-using-crontab-on-ubuntu-linux/"/>
    <id>https://kezunlin.me/blog/running-cronjob-using-crontab-on-ubuntu-linux/</id>
    <published>2020-01-17T00:17:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><h3 id="syntax"><a href="#syntax" class="headerlink" title="syntax"></a>syntax</h3><pre><code>sudo crontab -e</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># every 5 minutes</span></span><br><span class="line">*/5 * * * * /home/user/git/repo/python-demo/run.sh</span><br></pre></td></tr></table></figure><pre><code>  * * * * * command to be executed  - - - - -  | | | | |  | | | | ----- Day of week (0 - 7) (Sunday=0 or 7)  | | | ------- Month (1 - 12)  | | --------- Day of month (1 - 31)  | ----------- Hour (0 - 23)  ------------- Minute (0 - 59)</code></pre><h3 id="crontab-FAQs"><a href="#crontab-FAQs" class="headerlink" title="crontab FAQs"></a>crontab FAQs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># (1) how to edit crontab file ?</span></span><br><span class="line"><span class="built_in">sudo</span> crontab -e </span><br><span class="line"><span class="built_in">sudo</span> crontab -l </span><br><span class="line"></span><br><span class="line"><span class="comment"># (2) how to enable crontab log </span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/rsyslog.d/50-default.conf</span><br><span class="line">cron.*              /var/log/cron.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># restart rsyslog</span></span><br><span class="line"><span class="built_in">sudo</span> service rsyslog restart</span><br><span class="line"><span class="comment"># now we can see </span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/cron.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (3) how to run a crontab job and see ENVS</span></span><br><span class="line"><span class="built_in">sudo</span> crontab -e </span><br><span class="line"></span><br><span class="line">* * * * * <span class="built_in">env</span> &gt; /home/kezunlin/env.log  </span><br><span class="line"><span class="comment"># 由root用户生成</span></span><br><span class="line"><span class="comment"># -rw-r--r-- 1 root root 411 3月  17 17:37 /home/kezunlin/env.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#结果如下</span></span><br><span class="line">LC_TIME=zh_CN.UTF-8</span><br><span class="line"><span class="comment">#MYFB_ROOT=/home/kezunlin/git/repo/myproject/</span></span><br><span class="line"><span class="comment">#HOME=/root</span></span><br><span class="line"><span class="comment">#PYTHON_BIN=/home/kezunlin/anaconda3/bin/python</span></span><br><span class="line">LC_MONETARY=zh_CN.UTF-8</span><br><span class="line">LOGNAME=root</span><br><span class="line"><span class="comment">#PATH=/usr/bin:/bin</span></span><br><span class="line">LC_ADDRESS=zh_CN.UTF-8</span><br><span class="line">LANG=en_US.UTF-8</span><br><span class="line">LC_TELEPHONE=zh_CN.UTF-8</span><br><span class="line">LC_NAME=zh_CN.UTF-8</span><br><span class="line">SHELL=/bin/sh</span><br><span class="line">LC_MEASUREMENT=zh_CN.UTF-8</span><br><span class="line">LC_IDENTIFICATION=zh_CN.UTF-8</span><br><span class="line">PWD=/root</span><br><span class="line"><span class="comment">#PYTHONPATH=$PYHONPATH:$MYFB_ROOT../</span></span><br><span class="line">LC_NUMERIC=zh_CN.UTF-8</span><br><span class="line">LC_PAPER=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以看到,系统执行crontab job则只会加载默认的ENVS+ /etc/environment中的ENVS，不会设置任何用户ENVS</span></span><br><span class="line"><span class="comment"># 如果scripts中使用了来自.bashrc, .profile中的ENVs，肯定会导致导致scripts执行失败</span></span><br><span class="line"><span class="comment"># **方案**</span></span><br><span class="line"><span class="comment"># 将用户自定义ENVS放置在/etc/environment</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他示例</span></span><br><span class="line"><span class="comment"># crontab 中最好使用绝对路径 (不能使用~等,  可以使用$HOME,  source需要用.代替)</span></span><br><span class="line">* * * * * <span class="built_in">sleep</span> 5s &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yo&quot;</span></span><br><span class="line">* * * * * <span class="built_in">env</span> &gt;&gt; <span class="variable">$HOME</span>/env.log </span><br><span class="line">* * * * * <span class="built_in">export</span> LC_ALL=nb_NO.UTF-8; <span class="built_in">sleep</span> 5s &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yo&quot;</span></span><br><span class="line">*/5 * * * * /home/ubuntu/scripts/run5.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (5) 既然crontab可以加载/etc/environment中的ENVS，那么可以在crontab中使用来自/etc/environment中的ENVS，比如</span></span><br><span class="line">*/1 * * * * <span class="variable">$MYFB_ROOT</span>/scripts/run5.sh  <span class="comment">#OK 可以替换下面的路径</span></span><br><span class="line">*/1 * * * * /home/ubuntu/project/scripts/run5.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (6) crontab和手动运行scripts的区别</span></span><br><span class="line"><span class="comment"># A: 手动运行,开启terminal,除了加载系统/etc/environment中的ENVS,</span></span><br><span class="line"><span class="comment"># 还会加载当前user的.bashrc .profile文件,设置好ENVS,可以在scripts中使用</span></span><br><span class="line"><span class="comment"># B: 然而crontab则不会加载用户ENVS</span></span><br><span class="line"><span class="comment"># ***所以crontab执行的scripts中最好使用绝对路径，不要使用用户ENVS，否则执行失败***</span></span><br><span class="line"><span class="comment"># 或者将用户ENVS写入到/etc/environment中</span></span><br></pre></td></tr></table></figure><h3 id="crontab-终极方案"><a href="#crontab-终极方案" class="headerlink" title="crontab 终极方案"></a>crontab 终极方案</h3><h4 id="ENVS"><a href="#ENVS" class="headerlink" title="ENVS"></a>ENVS</h4><p>vim <code>/etc/environment</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/environment （可以被crontab加载,.bashrc则不行) </span></span><br><span class="line"><span class="comment"># ~/git会被crontab替换为/root/git/repo/myproject，所以使用/home/kezunlin代替</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (1) ubuntu 16.04</span></span><br><span class="line">MYFB_ROOT=/home/kezunlin/git/repo/myproject/</span><br><span class="line">PYTHONPATH=<span class="variable">$PYHONPATH</span>:<span class="variable">$MYFB_ROOT</span>../</span><br><span class="line">PYTHON_BIN=/home/kezunlin/anaconda3/bin/python</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2) WSL   </span></span><br><span class="line">MYFB_ROOT=/home/ubuntu/git/myproject/</span><br><span class="line">PYTHONPATH=<span class="variable">$PYHONPATH</span>:<span class="variable">$MYFB_ROOT</span>../</span><br><span class="line">PYTHON_BIN=/usr/bin/python3</span><br><span class="line"></span><br><span class="line"><span class="comment"># (3) cloud server </span></span><br><span class="line">MYFB_ROOT=/home/ubuntu/git/myproject/</span><br><span class="line">PYTHONPATH=<span class="variable">$PYHONPATH</span>:<span class="variable">$MYFB_ROOT</span>../</span><br><span class="line">PYTHON_BIN=/usr/bin/python3</span><br></pre></td></tr></table></figure><h4 id="crontab-e"><a href="#crontab-e" class="headerlink" title="crontab -e"></a>crontab -e</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scripts的路径可以使用来自/etc/environment的ENVS</span></span><br><span class="line"><span class="comment"># 可以统一各个不同平台的写法</span></span><br><span class="line"><span class="comment"># for ubuntu 16.04 / WSL / cloud server</span></span><br><span class="line">* * * * * <span class="built_in">env</span> &gt; <span class="variable">$MYFB_ROOT</span>/scripts/env.log</span><br><span class="line">*/5 * * * * <span class="variable">$MYFB_ROOT</span>/scripts/run5.sh  </span><br><span class="line">*/10 * * * * <span class="variable">$MYFB_ROOT</span>/scripts/run10.sh</span><br></pre></td></tr></table></figure><h4 id="Scripts"><a href="#Scripts" class="headerlink" title="Scripts"></a>Scripts</h4><p><code>scripts/run5.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">. /etc/environment</span><br><span class="line"><span class="comment"># MYFB_ROOT  PYTHONPATH  PYTHON_BIN</span></span><br><span class="line"><span class="comment">#env &gt; $MYFB_ROOT/env_test.log</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$MYFB_ROOT</span>  <span class="comment"># 代码中使用了.flag.txt必须cd到此目录</span></span><br><span class="line"><span class="variable">$PYTHON_BIN</span> run5.py &gt;&gt; <span class="built_in">log</span>/log5.txt</span><br></pre></td></tr></table></figure><p><code>scripts/run10.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">. /etc/environment</span><br><span class="line"><span class="comment">##env &gt; $MYFB_ROOT/env_test.log</span></span><br><span class="line"><span class="comment"># MYFB_ROOT  PYTHONPATH  PYTHON_BIN</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$MYFB_ROOT</span>  <span class="comment"># 代码中使用了.flag.txt必须cd到此目录</span></span><br><span class="line"><span class="variable">$PYTHON_BIN</span> run10.py &gt;&gt; <span class="built_in">log</span>/log10.txt</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://stackoverflow.com/questions/22743548/cronjob-not-running">cronjob-not-running</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2020&#x2F;1&#x2F;17: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;crontab&quot;&gt;&lt;a href=&quot;#crontab&quot; class=&quot;headerlink&quot; title=&quot;crontab&quot;&gt;&lt;/a&gt;crontab&lt;/h2&gt;&lt;h3 id=&quot;syntax&quot;&gt;&lt;a href=&quot;#syntax&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="linux" scheme="https://kezunlin.me/categories/linux/"/>
    
    
    <category term="cronjob" scheme="https://kezunlin.me/tags/cronjob/"/>
    
    <category term="crontab" scheme="https://kezunlin.me/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title>python requests exceptions proxyerror and solution</title>
    <link href="https://kezunlin.me/blog/python-requests-exceptions-proxyerror/"/>
    <id>https://kezunlin.me/blog/python-requests-exceptions-proxyerror/</id>
    <published>2020-01-13T08:13:41.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="error"><a href="#error" class="headerlink" title="error"></a>error</h3><p>when <code>r = requests.get(url)</code>, error occur:</p><blockquote><p>requests.exceptions.ProxyError: HTTPConnectionPool(host&#x3D;’127.0.0.1’, port&#x3D;8888):<br>Max retries exceeded with url: <a href="http://www.baidu.com/">http://www.baidu.com/</a> (Caused by ProxyError(‘Cannot<br>connect to proxy.’, NewConnectionError(‘&lt;urllib3.connection.HTTPConnection object<br>at 0x7f5611990080&gt;: Failed to establish a new connection: [Errno 111] Connection<br>refused’)))</p></blockquote><h3 id="solutions"><a href="#solutions" class="headerlink" title="solutions"></a>solutions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">env</span> | grep -i proxy </span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&#x27;127.0.0.1:8888&#x27;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&#x27;127.0.0.1:8888&#x27;</span></span><br><span class="line"><span class="built_in">export</span> ftp_proxy=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">export</span> socks_proxy=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>edit <code>~/.bashrc</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">export</span> ftp_proxy=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">export</span> socks_proxy=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>and run <code>source ~.bashrc</code></p><p>Now OK.</p><p>or by code </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxies = &#123; <span class="string">&quot;http&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;https&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">requests.get(<span class="string">&quot;http://baidu.com&quot;</span>, proxies=proxies)</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;11&#x2F;08: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h3 id=&quot;error&quot;&gt;&lt;a href=&quot;#error&quot; class=&quot;headerlink&quot; title=&quot;err</summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="requests" scheme="https://kezunlin.me/tags/requests/"/>
    
    <category term="proxy" scheme="https://kezunlin.me/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>how to install vscode on Nvidia Jetson Nano</title>
    <link href="https://kezunlin.me/blog/how-to-install-vscode-on-Nvidia-Jetson-Nano/"/>
    <id>https://kezunlin.me/blog/how-to-install-vscode-on-Nvidia-Jetson-Nano/</id>
    <published>2019-12-20T08:53:43.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h2><ul><li><a href="https://kezunlin.me/post/4eb7fcec">Getting Started with Nvidia Jetson Nano</a></li><li><strong><a href="https://kezunlin.me/post/974aaa0a">how to install vscode on Nvidia Jetson Nano</a></strong></li><li><a href="https://kezunlin.me/post/d7b68f88">how to use vscode remote-ssh for Linux arm64 aarch64 platform such as Nvidia Jetson TX1 TX2 Nano</a></li></ul><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="method-1"><a href="#method-1" class="headerlink" title="method 1"></a>method 1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/JetsonHacksNano/installVSCode.git</span><br><span class="line">$ <span class="built_in">cd</span> installVSCode</span><br><span class="line">$ ./installVSCode.sh</span><br><span class="line"></span><br><span class="line">Get:1 https://packagecloud.io/headmelted/codebuilds/debian stretch/main arm64 code-oss arm64 1.42.0-1575969886 [57.0 MB]</span><br></pre></td></tr></table></figure><blockquote><p><code>code-oss</code> 1.42.0</p></blockquote><h3 id="method-2"><a href="#method-2" class="headerlink" title="method 2"></a>method 2</h3><p>download vscode from <a href="https://github.com/toolboc/vscode/releases/download/1.32.3/code-oss_1.32.3-arm64.deb">code-oss_1.32.3-arm64.deb</a> and install</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> dpkg -i code-oss_1.32.3-arm64.deb</span><br></pre></td></tr></table></figure><blockquote><p><code>code-oss</code> 1.32.3</p></blockquote><h2 id="Start-VSCode"><a href="#Start-VSCode" class="headerlink" title="Start VSCode"></a>Start VSCode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check version</span></span><br><span class="line">$ code-oss --version</span><br><span class="line">1.42.0</span><br><span class="line">d01e111fb0e6e27378fcd049bbc9b36d0833d78e</span><br><span class="line">arm64</span><br><span class="line"></span><br><span class="line"><span class="comment"># start vscode on nano</span></span><br><span class="line">$ code-oss</span><br></pre></td></tr></table></figure><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;12&#x2F;20: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Series&quot;&gt;&lt;a href=&quot;#Series&quot; class=&quot;headerlink&quot; title=&quot;Series&quot;&gt;&lt;/a&gt;Series&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kezunlin.me/post/4eb7fcec&quot;&gt;Gett</summary>
      
    
    
    
    <category term="deep learning" scheme="https://kezunlin.me/categories/deep-learning/"/>
    
    
    <category term="vscode" scheme="https://kezunlin.me/tags/vscode/"/>
    
    <category term="Jetson Nano" scheme="https://kezunlin.me/tags/Jetson-Nano/"/>
    
    <category term="code-oss" scheme="https://kezunlin.me/tags/code-oss/"/>
    
  </entry>
  
  <entry>
    <title>how to use vscode remote-ssh for Linux arm64 aarch64 platform such as Nvidia Jetson TX1 TX2 Nano</title>
    <link href="https://kezunlin.me/blog/how-to-use-vscode-remote-ssh-for-Linux-arm64-aarch64-platform-such-as-Nvidia-Jetson-TX1-TX2-Nano/"/>
    <id>https://kezunlin.me/blog/how-to-use-vscode-remote-ssh-for-Linux-arm64-aarch64-platform-such-as-Nvidia-Jetson-TX1-TX2-Nano/</id>
    <published>2019-12-20T08:37:58.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h2><ul><li><a href="https://kezunlin.me/post/4eb7fcec">Getting Started with Nvidia Jetson Nano</a></li><li><a href="https://kezunlin.me/post/974aaa0a">how to install vscode on Nvidia Jetson Nano</a></li><li><strong><a href="https://kezunlin.me/post/d7b68f88">how to use vscode remote-ssh for Linux arm64 aarch64 platform such as Nvidia Jetson TX1 TX2 Nano</a></strong></li></ul><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><ul><li>Host: Ubuntu 16.04&#x2F;18.04, VS Code Insiders</li><li>Target: ARM64 Jetson Nano, Ubuntu 18.04</li></ul><blockquote><p>for using <code>Remote-SSH</code> for Linux arm64 aarch64 platform such as Nvidia<br>  Jetson TX1 TX2 Nano, we have to install <code>VS Code Insiders</code> instead of normal <code>VS Code</code></p></blockquote><p>Steps as follow:</p><ol><li><p>donwload <code>code-insiders_1.42.0-1576733727_amd64.deb</code> from <a href="https://code.visualstudio.com/insiders/">here</a>.</p></li><li><p>install <code>VS Code Insiders</code> by </p><p> $ sudo dpkg -i code-insiders_1.42.0-1576733727_amd64.deb</p></li><li><p>start <code>VS Code Insiders</code></p><p> $ code-insiders</p></li><li><p>install <code>Remote-SSH</code> extension for <code>VS Code Insiders</code> and restart</p></li><li><p>Now we can use <code>VS Code Insiders</code> to connect to your Linux arm64 aarch64 platform such as Nvidia<br>  Jetson TX1 TX2 Nano</p></li></ol><p>check vscode version</p><ul><li><code>code</code>  1.40.1</li><li><code>code-insiders</code> 1.42.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vscode </span></span><br><span class="line">$ code --version</span><br><span class="line">1.40.1</span><br><span class="line">8795a9889db74563ddd43eb0a897a2384129a619</span><br><span class="line">x64</span><br><span class="line">                                                                                              </span><br><span class="line"><span class="comment"># vscode insiders        </span></span><br><span class="line">$ code-insiders --version</span><br><span class="line">1.42.0-insider</span><br><span class="line">e74405d11443c5361c31e2bc341866d146eee206</span><br><span class="line">x64</span><br></pre></td></tr></table></figure><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;12&#x2F;20: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Series&quot;&gt;&lt;a href=&quot;#Series&quot; class=&quot;headerlink&quot; title=&quot;Series&quot;&gt;&lt;/a&gt;Series&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kezunlin.me/post/4eb7fcec&quot;&gt;Gett</summary>
      
    
    
    
    <category term="deep learning" scheme="https://kezunlin.me/categories/deep-learning/"/>
    
    
    <category term="vscode" scheme="https://kezunlin.me/tags/vscode/"/>
    
    <category term="Jetson Nano" scheme="https://kezunlin.me/tags/Jetson-Nano/"/>
    
    <category term="Jetson TX1" scheme="https://kezunlin.me/tags/Jetson-TX1/"/>
    
    <category term="Jetson TX2" scheme="https://kezunlin.me/tags/Jetson-TX2/"/>
    
    <category term="vscode-insiders" scheme="https://kezunlin.me/tags/vscode-insiders/"/>
    
  </entry>
  
  <entry>
    <title>how to get alexa rank with python xml and save to csv using pandas</title>
    <link href="https://kezunlin.me/blog/how-to-get-alexa-rank-with-python-xml-and-save-to-csv-using-pandas/"/>
    <id>https://kezunlin.me/blog/how-to-get-alexa-rank-with-python-xml-and-save-to-csv-using-pandas/</id>
    <published>2019-12-16T02:11:02.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-to-get-alexa-rank"><a href="#How-to-get-alexa-rank" class="headerlink" title="How to get alexa rank"></a>How to get alexa rank</h2><h3 id="xml-demo"><a href="#xml-demo" class="headerlink" title="xml demo"></a>xml demo</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">content = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;ALEXA VER=&quot;0.9&quot; URL=&quot;kezunlin.me/&quot; HOME=&quot;0&quot; AID=&quot;=&quot; IDN=&quot;kezunlin.me/&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;RLS PREFIX=&quot;http://&quot; more=&quot;0&quot;&gt; &lt;/RLS&gt;</span></span><br><span class="line"><span class="string">    &lt;SD TITLE=&quot;A&quot; FLAGS=&quot;&quot; HOST=&quot;kezunlin.me&quot;&gt; &lt;/SD&gt;</span></span><br><span class="line"><span class="string">    &lt;SD&gt;</span></span><br><span class="line"><span class="string">        &lt;POPULARITY URL=&quot;kezunlin.me/&quot; TEXT=&quot;2489312&quot; SOURCE=&quot;panel&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;REACH RANK=&quot;2141483&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;RANK DELTA=&quot;-1406486&quot;/&gt;</span></span><br><span class="line"><span class="string">    &lt;/SD&gt;</span></span><br><span class="line"><span class="string">&lt;/ALEXA&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">root = ElementTree.fromstring(content) </span><br><span class="line"><span class="comment"># obj.tag, obj.attrib </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, value <span class="keyword">in</span> root.attrib.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125;=&quot;&#123;1&#125;&quot;&#x27;</span>.<span class="built_in">format</span>(name, value))</span><br><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> root:</span><br><span class="line">    <span class="built_in">print</span>(child.tag, child.attrib)</span><br></pre></td></tr></table></figure><h3 id="pandas-demo"><a href="#pandas-demo" class="headerlink" title="pandas demo"></a>pandas demo</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">demo_create_dataframe_1</span>():</span><br><span class="line">    <span class="comment"># initialize list of lists </span></span><br><span class="line">    data = [[<span class="string">&#x27;tom&#x27;</span>, <span class="number">10</span>], [<span class="string">&#x27;nick&#x27;</span>, <span class="number">15</span>], [<span class="string">&#x27;juli&#x27;</span>, <span class="number">14</span>]] </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Create the pandas DataFrame </span></span><br><span class="line">    df = pd.DataFrame(data, columns = [<span class="string">&#x27;Name&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>]) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># print dataframe. </span></span><br><span class="line">    <span class="built_in">print</span>(df) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo_create_dataframe_2</span>():</span><br><span class="line">    <span class="comment"># intialise data of lists. </span></span><br><span class="line">    data = &#123;<span class="string">&#x27;Name&#x27;</span>:[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;nick&#x27;</span>, <span class="string">&#x27;krish&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>], <span class="string">&#x27;Age&#x27;</span>:[<span class="number">20</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">18</span>]&#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Create DataFrame </span></span><br><span class="line">    df = pd.DataFrame(data) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Print the output. </span></span><br><span class="line">    <span class="built_in">print</span>(df) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo_append_dataframe</span>():</span><br><span class="line">    <span class="comment"># Creating the first Dataframe using dictionary </span></span><br><span class="line">    df1 = df = pd.DataFrame(&#123;<span class="string">&quot;a&quot;</span>:[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], </span><br><span class="line">                            <span class="string">&quot;b&quot;</span>:[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]&#125;) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Creating the Second Dataframe using dictionary </span></span><br><span class="line">    df2 = pd.DataFrame(&#123;<span class="string">&quot;a&quot;</span>:[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], </span><br><span class="line">                        <span class="string">&quot;b&quot;</span>:[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]&#125;) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Print df1 </span></span><br><span class="line">    <span class="built_in">print</span>(df1, <span class="string">&quot;\n&quot;</span>) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># to append df2 at the end of df1 dataframe </span></span><br><span class="line">    new_df = df1.append(df2, ignore_index = <span class="literal">True</span>)  <span class="comment"># 更新index</span></span><br><span class="line">    <span class="built_in">print</span>(new_df)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo_pandas_index</span>():</span><br><span class="line">    data = &#123;<span class="string">&#x27;Name&#x27;</span>:[<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;nick&#x27;</span>, <span class="string">&#x27;krish&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>], <span class="string">&#x27;Age&#x27;</span>:[<span class="number">20</span>, <span class="number">21</span>, <span class="number">19</span>, <span class="number">18</span>]&#125; </span><br><span class="line">    df = pd.DataFrame(data) </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># case1:</span></span><br><span class="line">    df.to_csv(<span class="string">&#x27;data.csv&#x27;</span>,index=<span class="literal">False</span>) </span><br><span class="line">    df = pd.read_csv(<span class="string">&#x27;file_name.csv&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># case2</span></span><br><span class="line">    df.to_csv(<span class="string">&#x27;data.csv &#x27;</span>, index=<span class="literal">True</span>) <span class="comment"># default with index</span></span><br><span class="line">    df_new = pd.read_csv(<span class="string">&#x27;data.csv&#x27;</span>).drop([<span class="string">&#x27;unnamed 0&#x27;</span>],axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="get-rank-and-save-to-csv"><a href="#get-rank-and-save-to-csv" class="headerlink" title="get rank and save to csv"></a>get rank and save to csv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> xml.etree <span class="keyword">import</span> ElementTree</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_alexa_rank</span>(<span class="params">site=<span class="string">&quot;kezunlin.me&quot;</span></span>):</span><br><span class="line">    url = <span class="string">&quot;http://data.alexa.com/data?cli=10&amp;dat=snbamz&amp;url=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(site)</span><br><span class="line">    <span class="comment">#print(url)</span></span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    rank = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="comment">#print(r.content)</span></span><br><span class="line">        root = ElementTree.fromstring(r.content) </span><br><span class="line">        rank = <span class="built_in">int</span>(root[<span class="number">2</span>][<span class="number">0</span>].attrib[<span class="string">&quot;TEXT&quot;</span>]) <span class="comment"># by index</span></span><br><span class="line">    <span class="keyword">return</span> rank </span><br><span class="line">    </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;ALEXA VER=&quot;0.9&quot; URL=&quot;kezunlin.me/&quot; HOME=&quot;0&quot; AID=&quot;=&quot; IDN=&quot;kezunlin.me/&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;RLS PREFIX=&quot;http://&quot; more=&quot;0&quot;&gt; &lt;/RLS&gt;</span></span><br><span class="line"><span class="string">    &lt;SD TITLE=&quot;A&quot; FLAGS=&quot;&quot; HOST=&quot;kezunlin.me&quot;&gt; &lt;/SD&gt;</span></span><br><span class="line"><span class="string">    &lt;SD&gt;</span></span><br><span class="line"><span class="string">        &lt;POPULARITY URL=&quot;kezunlin.me/&quot; TEXT=&quot;2489312&quot; SOURCE=&quot;panel&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;REACH RANK=&quot;2141483&quot;/&gt;</span></span><br><span class="line"><span class="string">        &lt;RANK DELTA=&quot;-1406486&quot;/&gt;</span></span><br><span class="line"><span class="string">    &lt;/SD&gt;</span></span><br><span class="line"><span class="string">&lt;/ALEXA&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_csv</span>(<span class="params">date_str,rank,csv_filepath=<span class="string">&#x27;rank.csv&#x27;</span></span>):</span><br><span class="line">    <span class="comment"># load existing df1</span></span><br><span class="line">    df1 = pd.read_csv(csv_filepath)</span><br><span class="line">    <span class="comment">#print(df1)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># create df2</span></span><br><span class="line">    data = &#123;<span class="string">&#x27;Date&#x27;</span>:[date_str], <span class="string">&#x27;Rank&#x27;</span>:[rank]&#125; </span><br><span class="line">    df2 = pd.DataFrame(data) </span><br><span class="line">    <span class="comment">#print(df2)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># append </span></span><br><span class="line">    df = df1.append(df2, ignore_index = <span class="literal">True</span>)  <span class="comment"># 更新index</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># save new df to csv</span></span><br><span class="line">    df.to_csv(csv_filepath, index=<span class="literal">False</span>, sep=<span class="string">&#x27;,&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment">#print(df)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Appending to &#123;&#125;&quot;</span>.<span class="built_in">format</span>(csv_filepath))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># get rank</span></span><br><span class="line">    rank = get_alexa_rank(<span class="string">&quot;kezunlin.me&quot;</span>)</span><br><span class="line">    date = datetime.datetime.now()</span><br><span class="line">    date_str = date.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;date = &#123;&#125; , rank = &#123;&#125;&quot;</span>.<span class="built_in">format</span>(date_str, rank))</span><br><span class="line">    </span><br><span class="line">    save_to_csv(date_str,rank)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>output </p><pre><code>date = 2019-12-16 , rank = 2486318Appending to rank.csv</code></pre><p>view results</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> rank.csv </span><br><span class="line">Date,Rank</span><br><span class="line">2019-12-13,2489312</span><br><span class="line">2019-12-16,2486318</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://docs.python.org/2/library/xml.etree.elementtree.html">xml.etree.elementtree</a></li><li><a href="https://stackoverflow.com/questions/20845213/how-to-avoid-python-pandas-creating-an-index-in-a-saved-csv">how-to-avoid-python-pandas-creating-an-index-in-a-saved-csv</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;12&#x2F;16: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;How-to-get-alexa-rank&quot;&gt;&lt;a href=&quot;#How-to-get-alexa-rank&quot; class=&quot;headerlink&quot; title=&quot;How to get alexa rank&quot;&gt;&lt;/a&gt;How to get alexa rank&lt;/</summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="requests" scheme="https://kezunlin.me/tags/requests/"/>
    
    <category term="xml" scheme="https://kezunlin.me/tags/xml/"/>
    
    <category term="pandas" scheme="https://kezunlin.me/tags/pandas/"/>
    
    <category term="alexa" scheme="https://kezunlin.me/tags/alexa/"/>
    
  </entry>
  
  <entry>
    <title>how to find string and replace with python regex</title>
    <link href="https://kezunlin.me/blog/how-to-find-string-and-replace-with-python-regex/"/>
    <id>https://kezunlin.me/blog/how-to-find-string-and-replace-with-python-regex/</id>
    <published>2019-12-13T03:22:26.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Regex-Online-Demo"><a href="#Regex-Online-Demo" class="headerlink" title="Regex Online Demo"></a>Regex Online Demo</h2><p><img src="https://kezunlin.me/images/posts/1864218-20191213112902864-1854703985.png" alt="regex online demo"></p><h2 id="Code-Example"><a href="#Code-Example" class="headerlink" title="Code Example"></a>Code Example</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> re </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">regrex_demo</span>():</span><br><span class="line">    pattern = <span class="string">r&#x27;https://img201[7-9].cnblogs.com/blog/\d&#123;6&#125;/20\d&#123;4&#125;/\d&#123;6&#125;-\d&#123;,&#125;-\d&#123;,&#125;.png&#x27;</span></span><br><span class="line">    string = <span class="string">&quot;&quot;&quot;![flops](https://kezunlin.me/images/posts/635233-20190912095826925-710547982.png)</span></span><br><span class="line"><span class="string">            hello world</span></span><br><span class="line"><span class="string">            ![flops](https://kezunlin.me/images/posts/635233-20190912095826925-710547982.png)&quot;&quot;&quot;</span></span><br><span class="line">    results = re.findall(pattern,string) <span class="comment"># list</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> results:</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_filepaths</span>(<span class="params">root_dir</span>):</span><br><span class="line">    filepaths = []</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(root_dir):</span><br><span class="line">        filepath = os.path.sep.join([root_dir, filename]) </span><br><span class="line">        filepaths.append(filepath)</span><br><span class="line">    <span class="keyword">return</span> filepaths </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makesure_dir</span>(<span class="params"><span class="built_in">dir</span></span>):  </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="built_in">dir</span>):</span><br><span class="line">        os.makedirs(<span class="built_in">dir</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_cnblog_image_urls</span>(<span class="params">filepath</span>):</span><br><span class="line">    <span class="comment"># img2017 img2018  img2019</span></span><br><span class="line">    <span class="comment"># images2017 images2018  images2019</span></span><br><span class="line">    <span class="comment">#pattern = r&#x27;https*://img201[0-9].cnblogs.com/blog/\d&#123;6,8&#125;/20\d&#123;4&#125;/\d&#123;6,8&#125;-\d&#123;,&#125;-\d&#123;,&#125;.png&#x27;</span></span><br><span class="line">    <span class="comment">#pattern = r&#x27;https*://img201[0-9].cnblogs.com/blog/\d&#123;6,8&#125;/20\d&#123;4&#125;/\d&#123;6,8&#125;-\d&#123;,&#125;-\d&#123;,&#125;.jpg&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#pattern = r&#x27;https*://images201[0-9].cnblogs.com/blog/\d&#123;6,8&#125;/20\d&#123;4&#125;/\d&#123;6,8&#125;-\d&#123;,&#125;-\d&#123;,&#125;.png&#x27;</span></span><br><span class="line">    pattern = <span class="string">r&#x27;https*://images201[0-9].cnblogs.com/blog/\d&#123;6,8&#125;/20\d&#123;4&#125;/\d&#123;6,8&#125;-\d&#123;,&#125;-\d&#123;,&#125;.jpg&#x27;</span></span><br><span class="line">    </span><br><span class="line">    urls = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filepath,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        contents = f.read().replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="comment"># read file into one string </span></span><br><span class="line">        urls = re.findall(pattern,contents) <span class="comment"># list</span></span><br><span class="line">    <span class="keyword">return</span> urls</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_image</span>(<span class="params">url, to_file</span>):</span><br><span class="line">    r = requests.get(url, stream=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(to_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="comment">#r.raw.decode_content = True</span></span><br><span class="line">            shutil.copyfileobj(r.raw, f) </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Save to &quot;</span>,to_file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_image_by_chunk</span>(<span class="params">url, to_file</span>):</span><br><span class="line">    r = requests.get(url, stream=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(to_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(<span class="number">1024</span>):</span><br><span class="line">                f.write(chunk)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Save to &quot;</span>,to_file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">replace_inplace</span>(<span class="params">filepath, old_string, new_string</span>):</span><br><span class="line">    f = <span class="built_in">open</span>(filepath,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    filedata = f.read()</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line">    newdata = filedata.replace(old_string,new_string)</span><br><span class="line"></span><br><span class="line">    f = <span class="built_in">open</span>(filepath,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    f.write(newdata)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_image_wrapper</span>(<span class="params">url, to_dir</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    donwnload image from url and return new url</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    filename = url.split(<span class="string">&quot;/&quot;</span>)[-<span class="number">1</span>]  </span><br><span class="line">    to_file = os.path.sep.join([to_dir, filename])</span><br><span class="line">    download_image(url,to_file)</span><br><span class="line">    </span><br><span class="line">    new_url = <span class="string">&quot;https://kezunlin.me/images/posts/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(filename)</span><br><span class="line">    <span class="keyword">return</span> new_url </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_all_posts</span>():</span><br><span class="line">    to_dir = <span class="string">&quot;images/posts&quot;</span> <span class="comment"># images dir</span></span><br><span class="line">    makesure_dir(to_dir)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#posts_dir = &quot;../source/_posts/&quot;</span></span><br><span class="line">    posts_dir = <span class="string">&quot;test_posts&quot;</span></span><br><span class="line">    posts_dir = <span class="string">&quot;_posts&quot;</span></span><br><span class="line">    filepaths = get_filepaths(posts_dir)</span><br><span class="line">    <span class="keyword">for</span> filepath <span class="keyword">in</span> filepaths:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">20</span>)</span><br><span class="line">        <span class="built_in">print</span>(filepath)</span><br><span class="line">        urls = find_cnblog_image_urls(filepath)</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            new_url = download_image_wrapper(url,to_dir)</span><br><span class="line">            replace_inplace(filepath,url,new_url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment">#regrex_demo()</span></span><br><span class="line">    process_all_posts()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">grep -r &quot;cnblogs.com/blog&quot; source/_posts</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>    </span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="http://www.pyregex.com/">pyregex</a></li><li><a href="https://stackoverflow.com/questions/13137817/how-to-download-image-using-requests">how-to-download-image-using-requests</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;12&#x2F;13: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Regex-Online-Demo&quot;&gt;&lt;a href=&quot;#Regex-Online-Demo&quot; class=&quot;headerlink&quot; title=&quot;Regex Online Demo&quot;&gt;&lt;/a&gt;Regex Online Demo&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;</summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="regex" scheme="https://kezunlin.me/tags/regex/"/>
    
  </entry>
  
  <entry>
    <title>Getting Started with Nvidia Jetson Nano</title>
    <link href="https://kezunlin.me/blog/Nvidia-Jetson-Nano-Quick-Start/"/>
    <id>https://kezunlin.me/blog/Nvidia-Jetson-Nano-Quick-Start/</id>
    <published>2019-12-09T02:29:48.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h2><ul><li><strong><a href="https://kezunlin.me/post/4eb7fcec">Getting Started with Nvidia Jetson Nano</a></strong></li><li><a href="https://kezunlin.me/post/974aaa0a">how to install vscode on Nvidia Jetson Nano</a></li><li><a href="https://kezunlin.me/post/d7b68f88">how to use vscode remote-ssh for Linux arm64 aarch64 platform such as Nvidia Jetson TX1 TX2 Nano</a></li></ul><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a><a id="MyGuide"></a>Guide</h2><h3 id="Jetson-Family"><a href="#Jetson-Family" class="headerlink" title="Jetson Family"></a>Jetson Family</h3><ul><li>Jetson TX1 Developer Kit</li><li>Jetson TX2 Developer Kit</li><li>Jetson AGX Xaiver Developer Kit</li><li>Jetson Nano Developer Kit</li></ul><h3 id="SDKs-and-Tools"><a href="#SDKs-and-Tools" class="headerlink" title="SDKs and Tools"></a>SDKs and Tools</h3><ul><li>NVIDIA JetPack </li><li>NVIDIA DeepStream SDK</li><li>NVIDIA DIGITS for training</li></ul><p>JetPack includes:<br>• Full desktop Linux with NVIDIA drivers<br>• AI and Computer Vision libraries and APIs<br>• Developer tools<br>• Documentation and sample code</p><h3 id="Recommended-System-Requirements"><a href="#Recommended-System-Requirements" class="headerlink" title="Recommended System Requirements"></a>Recommended System Requirements</h3><p>Training GPU: </p><ul><li>Maxwell, Pascal, Volta, or Turing-based GPU (ideally with at least 6GB video memory) optionally, AWS P2&#x2F;P3 instance or Microsoft Azure N-series</li><li>Ubuntu 16.04&#x2F;18.04 x86_64</li></ul><p>Deployment:   </p><ul><li>Jetson Nano Developer Kit with JetPack 4.2 or newer (Ubuntu 18.04 aarch64).</li><li>Jetson Xavier Developer Kit with JetPack 4.0 or newer (Ubuntu 18.04 aarch64)</li><li>Jetson TX2 Developer Kit with JetPack 3.0 or newer (Ubuntu 16.04 aarch64).</li><li>Jetson TX1 Developer Kit with JetPack 2.3 or newer (Ubuntu 16.04 aarch64).</li></ul><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h2 id="Jetson-Nano-Developer-Kit"><a href="#Jetson-Nano-Developer-Kit" class="headerlink" title="Jetson Nano Developer Kit"></a>Jetson Nano Developer Kit</h2><h3 id="Jetson-Nano-Device"><a href="#Jetson-Nano-Device" class="headerlink" title="Jetson Nano Device"></a>Jetson Nano Device</h3><p>Jetson Nano was introduced in April 2019 for only $99.</p><p>jetson nano<br><img src="https://kezunlin.me/images/posts/1864218-20191213113956256-311630041.png" alt="Jetson Nano image"></p><ol><li>microSD card slot for main storage</li><li>40-pin expansion header</li><li>Micro-USB port for 5V power input or for data</li><li>Gigabit Ethernet port</li><li>USB 3.0 ports (x4)</li><li>HDMI output port</li><li>DisplayPort connector</li><li>DC Barrel jack for 5V power input</li><li>MIPI CSI camera connector</li></ol><blockquote><p>power input: 3 and 8<br>camera: 9 (MIPI CSI camera)<br>green LED (D53) close to the micro USB port should turn green</p></blockquote><p>inference performance<br><img src="https://kezunlin.me/images/posts/1864218-20191213114023081-1271978158.png" alt="Jetson Nano inference performance"></p><p>multiple cameras with jetson nano</p><ul><li><a href="https://www.arducam.com/multi-camera-solutions-for-nvidia-jetson-nano/">multi-camera-solutions-for-nvidia-jetson-nano</a></li><li><a href="https://devtalk.nvidia.com/default/topic/1055320/jetson-nano/how-to-connect-more-than-one-camera-to-jetson-nano/">how-to-connect-more-than-one-camera-to-jetson-nano</a></li></ul><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="Write-Image-to-the-microSD-Card"><a href="#Write-Image-to-the-microSD-Card" class="headerlink" title="Write Image to the microSD Card"></a>Write Image to the microSD Card</h3><ol><li>Download the <a href="https://developer.nvidia.com/jetson-nano-sd-card-image-r3223">jetson-nano-sd-card-image-r3223.zip</a></li><li>Format the microSD card to ExFAT if it’s a 64Gb or higher card, and to FAT if it’s less.</li><li>Use <a href="https://www.balena.io/etcher/">etcher</a> or linux command to write image to microSD.   <blockquote><p>Image size about 5G, so be patient to download<br>Recommend use <code>ether</code> to write image to write image to microSD</p></blockquote></li></ol><p>linux command to write image to microSD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">df</span> -h </span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            7.8G     0  7.8G   0% /dev</span><br><span class="line">tmpfs           1.6G   18M  1.6G   2% /run</span><br><span class="line">/dev/sdb6       184G  162G   13G  93% /</span><br><span class="line">tmpfs           7.8G   71M  7.8G   1% /dev/shm</span><br><span class="line">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</span><br><span class="line">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sdb5       453M  157M  270M  37% /boot</span><br><span class="line">tmpfs           1.6G   56K  1.6G   1% /run/user/1000</span><br><span class="line">/dev/sdb4       388G  337G   52G  87% /media/kezunlin/Workspace</span><br><span class="line">/dev/sdc1        30G   32K   30G   1% /media/kezunlin/nano</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ dmesg | <span class="built_in">tail</span> | awk <span class="string">&#x27;$3 == &quot;sd&quot; &#123;print&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#In this example, we can see the 32GB microSD card was assigned /dev/sdc:</span></span><br><span class="line">[  613.537818] sd 4:0:0:0: Attached scsi generic sg2 <span class="built_in">type</span> 0</span><br><span class="line">[  613.940079] sd 4:0:0:0: [sdc] 62333952 512-byte logical blocks: (31.9 GB/29.7 GiB)</span><br><span class="line">[  613.940664] sd 4:0:0:0: [sdc] Write Protect is off</span><br><span class="line">[  613.940672] sd 4:0:0:0: [sdc] Mode Sense: 87 00 00 00</span><br><span class="line">[  613.942730] sd 4:0:0:0: [sdc] Write cache: disabled, <span class="built_in">read</span> cache: enabled, doesnt support DPO or FUA</span><br><span class="line">[  613.956666] sd 4:0:0:0: [sdc] Attached SCSI removable disk</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use this command to write the zipped SD card image to the microSD card:</span></span><br><span class="line"></span><br><span class="line">$ /usr/bin/unzip -p ~/Downloads/jetson-nano-sd-card-image-r3223.zip | <span class="built_in">sudo</span> /bin/dd of=/dev/sdc bs=1M status=progress</span><br><span class="line"></span><br><span class="line">0+167548 records <span class="keyword">in</span></span><br><span class="line">0+167548 records out</span><br><span class="line">12884901888 bytes (13 GB, 12 GiB) copied, 511.602 s, 25.2 MB/s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 12 partitions generated by the writing process ???</span></span><br><span class="line">$ <span class="built_in">sudo</span> fdisk -l </span><br><span class="line"></span><br><span class="line">GPT PMBR size mismatch (25165823 != 62333951) will be corrected by w(rite).</span><br><span class="line">Disk /dev/sde: 29.7 GiB, 31914983424 bytes, 62333952 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: gpt</span><br><span class="line">Disk identifier: E696E264-F2EA-434A-900C-D9ACA2F99E43</span><br><span class="line"></span><br><span class="line">Device     Start      End  Sectors  Size Type</span><br><span class="line">/dev/sde1  24576 25165790 25141215   12G Linux filesystem</span><br><span class="line">/dev/sde2   2048     2303      256  128K Linux filesystem</span><br><span class="line">/dev/sde3   4096     4991      896  448K Linux filesystem</span><br><span class="line">/dev/sde4   6144     7295     1152  576K Linux filesystem</span><br><span class="line">/dev/sde5   8192     8319      128   64K Linux filesystem</span><br><span class="line">/dev/sde6  10240    10623      384  192K Linux filesystem</span><br><span class="line">/dev/sde7  12288    13439     1152  576K Linux filesystem</span><br><span class="line">/dev/sde8  14336    14463      128   64K Linux filesystem</span><br><span class="line">/dev/sde9  16384    17663     1280  640K Linux filesystem</span><br><span class="line">/dev/sde10 18432    19327      896  448K Linux filesystem</span><br><span class="line">/dev/sde11 20480    20735      256  128K Linux filesystem</span><br><span class="line">/dev/sde12 22528    22687      160   80K Linux filesystem</span><br><span class="line"></span><br><span class="line">Partition table entries are not <span class="keyword">in</span> disk order.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># When the dd command finishes, eject the disk device from the command line:</span></span><br><span class="line">$ <span class="built_in">sudo</span> eject /dev/sdc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Physically remove microSD card from the computer.</span></span><br></pre></td></tr></table></figure><p>Steps:</p><ol><li>Insert the microSD card into the appropriate slot</li><li>Connect the display and USB keyboard &#x2F;mouse and Ethernet cable.</li><li>Depending on the power supply you want to use, you may have to add or remove the jumper for power selection:<br> – If using a jack(part 8), the jumper must be set.<br> – if using USB (part 3), the jumper must be off.</li><li>Plug in the power supply. The green LED (D53) close to the micro USB port should turn green, and the display should show the NVIDIA logo before booting begins.</li></ol><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h2 id="Prepare-Nano-System"><a href="#Prepare-Nano-System" class="headerlink" title="Prepare Nano System"></a>Prepare Nano System</h2><hr><ul><li>Jetson Nano L4T 32.2.1-20190812212815 (JetPack 4.2.2)</li><li>nv-jetson-nano-sd-card-image-r32.2.1.zip</li><li>DeepStream SDK 4.0.1 (gstreamer1.0)</li></ul><hr><ul><li>Jetson Nano L4T 32.3-20191217(JetPack 4.3)</li><li>nv-jetson-nano-sd-card-image-r32.3.1.zip</li><li>DeepStream SDK 4.0.2 (gstreamer1.0)</li></ul><hr><ul><li>Ubuntu 18.04 aarch64 (bionic)</li><li>CUDA 10.0  SM_72  (installed)</li><li>TensorRT-5.1.6.0  (installed)</li><li>OpenCV 3.3.1 (installed)</li><li>Python 2.7 (installed) </li><li>Python 3.6.9</li><li>Numpy 1.13.3</li><li>QT 5.9.5</li></ul><blockquote><p><code>CUDA-10.0</code> and <code>TensorRT-5.1.6.0</code> has already installed on Jetson Nano.<br> ARM 64 machines such as the Jetson Nano and Raspberry Pi.</p></blockquote><blockquote><p><code>DeepStream SDK 4.0.1</code> requires the installation of <code>JetPack 4.2.2</code>.<br><code>DeepStream SDK 4.0.2</code> requires the installation of <code>JetPack 4.3</code>.</p></blockquote><h3 id="SSH-for-nano-with-ForwardX11"><a href="#SSH-for-nano-with-ForwardX11" class="headerlink" title="SSH for nano with ForwardX11"></a>SSH for nano with ForwardX11</h3><p><del>for nano, edit <code>/etc/ssh/ssh_config</code></del></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X11Forwarding <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p><del>and restart ssh</del></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> /etc/init.d/ssh restart</span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> nano: </span><br><span class="line">[ ok ] Restarting ssh (via systemctl): ssh.service.</span><br></pre></td></tr></table></figure><p>for my ubuntu client</p><p>edit <code>~/.ssh/config</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host nano</span><br><span class="line">  HostName 192.168.0.63</span><br><span class="line">  User nano</span><br><span class="line">  ForwardX11 <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><blockquote><p><code>ForwardX11 yes</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># method 1: `~/.ssh/config` with  `ForwardX11 yes`</span></span><br><span class="line">$ ssh nano@192.168.0.63</span><br><span class="line"></span><br><span class="line"><span class="comment"># method 2: with `-X`</span></span><br><span class="line">$ ssh -X nano@192.168.0.63 </span><br><span class="line"><span class="comment"># `-X` means enabling ForwardX11</span></span><br></pre></td></tr></table></figure><h3 id="add-CUDA-envs"><a href="#add-CUDA-envs" class="headerlink" title="add CUDA envs"></a>add CUDA envs</h3><p>edit <code>~.bashrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add this to your .bashrc file</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CUDA_HOME=/usr/local/cuda</span><br><span class="line"><span class="comment"># Adds the CUDA compiler to the PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$CUDA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># Adds the libraries</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$CUDA_HOME</span>/lib64:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure><p>check cuda version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br><span class="line">$ nvcc --version</span><br><span class="line"></span><br><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span><br><span class="line">Copyright (c) 2005-2019 NVIDIA Corporation</span><br><span class="line">Built on Mon_Mar_11_22:13:24_CDT_2019</span><br><span class="line">Cuda compilation tools, release 10.0, V10.0.326</span><br></pre></td></tr></table></figure><h3 id="check-versions"><a href="#check-versions" class="headerlink" title="check versions"></a>check versions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">uname</span> -a </span><br><span class="line">Linux nano-desktop 4.9.140-tegra <span class="comment">#1 SMP PREEMPT Sat Oct 19 15:54:06 PDT 2019 aarch64 aarch64 aarch64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line">$ dpkg-query --show nvidia-l4t-core</span><br><span class="line">nvidia-l4t-core32.2.1-20190812212815</span><br><span class="line"></span><br><span class="line">$ python --version</span><br><span class="line">Python 2.7.15+</span><br><span class="line"></span><br><span class="line">$ git --version</span><br><span class="line">git version 2.17.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># check tensorrt version</span></span><br><span class="line">$ ll -al /usr/lib/aarch64-linux-gnu/libnvinfer_plugin.so.5</span><br><span class="line">lrwxrwxrwx 1 root root 26 Jun  5  2019 /usr/lib/aarch64-linux-gnu/libnvinfer_plugin.so.5 -&gt; libnvinfer_plugin.so.5.1.6</span><br></pre></td></tr></table></figure><blockquote><p>NO NEED TO download <code>TensorRT 5.1.5.0 GA for Ubuntu 18.04 and CUDA 10.0 tar package</code> from <a href="https://developer.nvidia.com/nvidia-tensorrt-5x-download">here</a> and place at <code>/opt/TensorRT-5.1.5.0</code></p></blockquote><h3 id="install-packages"><a href="#install-packages" class="headerlink" title="install packages"></a>install packages</h3><ul><li>cmake 3.10.2</li><li>cmake-gui 3.10.2</li><li>python 3.6.9</li><li>QT 5.9.5</li></ul><blockquote><p><strong>use official ubuntu source</strong><br>do not replace <code>/etc/opt/sources.list</code> with aliyun source,otherwise lots of packages will fail to install</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># update</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># install cmake</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt-get install cmake</span><br><span class="line"></span><br><span class="line">Get:1 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 cmake arm64 3.10.2-1ubuntu2.18.04.1 [2,971 kB]</span><br><span class="line"></span><br><span class="line"><span class="comment"># install cmake-gui </span></span><br><span class="line">$ <span class="built_in">sudo</span> apt-get install cmake-gui cmake-qt-gui</span><br><span class="line"></span><br><span class="line">Get:1 http://ports.ubuntu.com/ubuntu-ports bionic-updates/universe arm64 cmake-qt-gui arm64 3.10.2-1ubuntu2.18.04.1 [1,527 kB]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># install python 3.6.9</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt -y install libpython3-dev python3-numpy</span><br><span class="line"></span><br><span class="line">Get:1 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 libpython3.6 arm64 3.6.9-1~18.04 [1,307 kB]</span><br><span class="line">Get:2 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 python3.6 arm64 3.6.9-1~18.04 [203 kB]                                           </span><br><span class="line">Get:3 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 libpython3.6-stdlib arm64 3.6.9-1~18.04 [1,609 kB]                               </span><br><span class="line">Get:4 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 python3.6-minimal arm64 3.6.9-1~18.04 [1,327 kB]                                 </span><br><span class="line">Get:5 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 libpython3.6-minimal arm64 3.6.9-1~18.04 [528 kB]                                </span><br><span class="line">Get:6 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 libpython3.6-dev arm64 3.6.9-1~18.04 [45.0 MB]                                   </span><br><span class="line">Get:7 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 libpython3-dev arm64 3.6.7-1~18.04 [7,328 B]                                     </span><br><span class="line">Get:8 http://ports.ubuntu.com/ubuntu-ports bionic/main arm64 python3-numpy arm64 1:1.13.3-2ubuntu1 [1,734 kB]</span><br><span class="line"></span><br><span class="line"><span class="comment"># install qt5</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt-get install qtbase5-dev</span><br><span class="line"></span><br><span class="line">Get:1 http://ports.ubuntu.com/ubuntu-ports bionic-updates/main arm64 libqt5core5a arm64 5.9.5+dfsg-0ubuntu2.4 [1933 kB]</span><br></pre></td></tr></table></figure><h3 id="packages-conclusion"><a href="#packages-conclusion" class="headerlink" title="packages conclusion"></a>packages conclusion</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt -y install cmake cmake-gui cmake-qt-gui</span><br><span class="line"><span class="built_in">sudo</span> apt -y install libpython3-dev python3-numpy python3-pip</span><br><span class="line"><span class="built_in">sudo</span> apt -y install qtbase5-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># other packages for c++ programs</span></span><br><span class="line"><span class="built_in">sudo</span> apt -y install libcrypto++-dev </span><br><span class="line"><span class="built_in">sudo</span> apt -y install libgoogle-glog-dev </span><br><span class="line"><span class="built_in">sudo</span> apt -y install libgflags-dev</span><br><span class="line"><span class="built_in">sudo</span> apt -y install --no-install-recommends libboost-all-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># top and jtop </span></span><br><span class="line"><span class="built_in">sudo</span> -H pip3 install jetson-stats</span><br><span class="line"><span class="built_in">sudo</span> jtop -h</span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h2 id="Build-jetson-inference"><a href="#Build-jetson-inference" class="headerlink" title="Build jetson-inference"></a>Build jetson-inference</h2><p>see <a href="https://github.com/dusty-nv/jetson-inference">jetson-inference</a></p><h3 id="cmake-and-configure"><a href="#cmake-and-configure" class="headerlink" title="cmake and configure"></a>cmake and configure</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/dusty-nv/jetson-inference</span><br><span class="line"><span class="built_in">cd</span> jetson-inference</span><br><span class="line">git submodule update --init</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"><span class="built_in">sudo</span> cmake ..</span><br></pre></td></tr></table></figure><p>congigure</p><blockquote><p> do not donwload models<br> do not download pytorch</p></blockquote><p>run download models and pytorch later if you really need</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> jetson-inference/tools</span><br><span class="line">$ ./download-models.sh</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> jetson-inference/build</span><br><span class="line">$ ./install-pytorch.sh</span><br></pre></td></tr></table></figure><blockquote><p>or download models from <a href="https://github.com/dusty-nv/jetson-inference/releases">here</a><br><code>wget -b -c https://github.com/dusty-nv/jetson-inference/releases/download/model-mirror-190618/ResNet-18.tar.gz </code></p></blockquote><p>congigure output<br><img src="https://kezunlin.me/images/posts/1864218-20191219154424278-1963790396.png" alt="cmake-gui jetson-inference"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">[jetson-inference]  Checking <span class="keyword">for</span> <span class="string">&#x27;dialog&#x27;</span> deb package...installed</span><br><span class="line">[jetson-inference]  FOUND_DIALOG=INSTALLED</span><br><span class="line"></span><br><span class="line">[jetson-inference]  Model selection status:  0</span><br><span class="line">[jetson-inference]  No models were selected <span class="keyword">for</span> download.</span><br><span class="line"></span><br><span class="line">[jetson-inference]  to run this tool again, use the following commands:</span><br><span class="line">    $ <span class="built_in">cd</span> &lt;jetson-inference&gt;/tools</span><br><span class="line">    $ ./download-models.sh</span><br><span class="line"></span><br><span class="line">[jetson-inference]  Checking <span class="keyword">for</span> <span class="string">&#x27;dialog&#x27;</span> deb package...installed</span><br><span class="line">[jetson-inference]  FOUND_DIALOG=INSTALLED</span><br><span class="line"></span><br><span class="line"><span class="built_in">head</span>: cannot open <span class="string">&#x27;/etc/nv_tegra_release&#x27;</span> <span class="keyword">for</span> reading: No such file or directory</span><br><span class="line">[jetson-inference]  reading L4T version from <span class="string">&quot;dpkg-query --show nvidia-l4t-core&quot;</span></span><br><span class="line">[jetson-inference]  Jetson BSP Version:  L4T R32.2</span><br><span class="line"></span><br><span class="line">[jetson-inference]  Package selection status:  1</span><br><span class="line">[jetson-inference]  Package selection cancelled.</span><br><span class="line"></span><br><span class="line">[jetson-inference]  installation complete, exiting with status code 0</span><br><span class="line">[jetson-inference]  to run this tool again, use the following commands:</span><br><span class="line">    $ <span class="built_in">cd</span> &lt;jetson-inference&gt;/build</span><br><span class="line">    $ ./install-pytorch.sh</span><br><span class="line"></span><br><span class="line">[Pre-build]  Finished CMakePreBuild script</span><br><span class="line"></span><br><span class="line">-- Finished installing dependencies</span><br><span class="line">-- using patched FindCUDA.cmake</span><br><span class="line">Looking <span class="keyword">for</span> pthread.h</span><br><span class="line">Looking <span class="keyword">for</span> pthread.h - found</span><br><span class="line">Looking <span class="keyword">for</span> pthread_create</span><br><span class="line">Looking <span class="keyword">for</span> pthread_create - not found</span><br><span class="line">Looking <span class="keyword">for</span> pthread_create <span class="keyword">in</span> pthreads</span><br><span class="line">Looking <span class="keyword">for</span> pthread_create <span class="keyword">in</span> pthreads - not found</span><br><span class="line">Looking <span class="keyword">for</span> pthread_create <span class="keyword">in</span> pthread</span><br><span class="line">Looking <span class="keyword">for</span> pthread_create <span class="keyword">in</span> pthread - found</span><br><span class="line">Found Threads: TRUE  </span><br><span class="line"></span><br><span class="line">-- using patched FindCUDA.cmake</span><br><span class="line">-- CUDA version: 10.0</span><br><span class="line">-- CUDA 10 detected, enabling SM_72</span><br><span class="line">-- OpenCV version:  3.3.1</span><br><span class="line">-- OpenCV version &gt;= 3.0.0, enabling OpenCV</span><br><span class="line">-- system <span class="built_in">arch</span>:  aarch64</span><br><span class="line">-- output path:  /home/nano/git/jetson-inference/build/aarch64</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/detectNet.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/homographyNet.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/imageNet.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/segNet.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/superResNet.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/tensorNet.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/c/imageNet.cuh</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/calibration/randInt8Calibrator.h</span><br><span class="line">Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) </span><br><span class="line">-- found Qt5Widgets version:  5.9.5</span><br><span class="line">-- found Qt5Widgets defines:  -DQT_WIDGETS_LIB;-DQT_GUI_LIB;-DQT_CORE_LIB</span><br><span class="line">-- found Qt5Widgets library:  Qt5::Widgets</span><br><span class="line">-- found Qt5Widgets include:  /usr/include/aarch64-linux-gnu/qt5/;/usr/include/aarch64-linux-gnu/qt5/QtWidgets;/usr/include/aarch64-linux-gnu/qt5/QtGui;/usr/include/aarch64-linux-gnu/qt5/QtCore;/usr/lib/aarch64-linux-gnu/qt5//mkspecs/linux-g++</span><br><span class="line">-- camera-capture:  building as submodule, /home/nano/git/jetson-inference/tools</span><br><span class="line">-- jetson-utils:  building as submodule, /home/nano/git/jetson-inference</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/XML.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/commandLine.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/filesystem.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/mat33.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/pi.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/rand.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/timespec.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/camera/gstCamera.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/camera/v4l2Camera.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/codec/gstDecoder.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/codec/gstEncoder.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/codec/gstUtility.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaFont.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaMappedMemory.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaNormalize.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaOverlay.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaRGB.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaResize.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaUtility.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaWarp.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/cuda/cudaYUV.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/display/glDisplay.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/display/glTexture.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/display/glUtility.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/image/imageIO.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/image/loadImage.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/input/devInput.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/input/devJoystick.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/input/devKeyboard.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/network/Endian.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/network/IPv4.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/network/NetworkAdapter.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/network/Socket.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/threads/Event.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/threads/Mutex.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/threads/Process.h</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/utils/threads/Thread.h</span><br><span class="line">-- trying to build Python bindings <span class="keyword">for</span> Python versions:  2.7;3.6;3.7</span><br><span class="line">-- detecting Python 2.7...</span><br><span class="line">-- found Python version:  2.7 (2.7.15+)</span><br><span class="line">-- found Python include:  /usr/include/python2.7</span><br><span class="line">-- found Python library:  /usr/lib/aarch64-linux-gnu/libpython2.7.so</span><br><span class="line">-- CMake module path:  /home/nano/git/jetson-inference/utils/cuda;/home/nano/git/jetson-inference/utils/python/bindings</span><br><span class="line">NumPy ver. 1.13.3 found (include: /usr/lib/python2.7/dist-packages/numpy/core/include)</span><br><span class="line">-- found NumPy version:  1.13.3</span><br><span class="line">-- found NumPy include:  /usr/lib/python2.7/dist-packages/numpy/core/include</span><br><span class="line">-- detecting Python 3.6...</span><br><span class="line">-- found Python version:  3.6 (3.6.9)</span><br><span class="line">-- found Python include:  /usr/include/python3.6m</span><br><span class="line">-- found Python library:  /usr/lib/aarch64-linux-gnu/libpython3.6m.so</span><br><span class="line">-- CMake module path:  /home/nano/git/jetson-inference/utils/cuda;/home/nano/git/jetson-inference/utils/python/bindings</span><br><span class="line">NumPy ver. 1.13.3 found (include: /usr/lib/python3/dist-packages/numpy/core/include)</span><br><span class="line">-- found NumPy version:  1.13.3</span><br><span class="line">-- found NumPy include:  /usr/lib/python3/dist-packages/numpy/core/include</span><br><span class="line">-- detecting Python 3.7...</span><br><span class="line">-- Python 3.7 wasn<span class="string">&#x27;t found</span></span><br><span class="line"><span class="string">-- Copying /home/nano/git/jetson-inference/utils/python/examples/camera-viewer.py</span></span><br><span class="line"><span class="string">-- Copying /home/nano/git/jetson-inference/utils/python/examples/cuda-from-numpy.py</span></span><br><span class="line"><span class="string">-- Copying /home/nano/git/jetson-inference/utils/python/examples/cuda-to-numpy.py</span></span><br><span class="line"><span class="string">-- Copying /home/nano/git/jetson-inference/utils/python/examples/gl-display-test.py</span></span><br><span class="line"><span class="string">-- trying to build Python bindings for Python versions:  2.7;3.6;3.7</span></span><br><span class="line"><span class="string">-- detecting Python 2.7...</span></span><br><span class="line"><span class="string">-- found Python version:  2.7 (2.7.15+)</span></span><br><span class="line"><span class="string">-- found Python include:  /usr/include/python2.7</span></span><br><span class="line"><span class="string">-- found Python library:  /usr/lib/aarch64-linux-gnu/libpython2.7.so</span></span><br><span class="line"><span class="string">-- detecting Python 3.6...</span></span><br><span class="line"><span class="string">-- found Python version:  3.6 (3.6.9)</span></span><br><span class="line"><span class="string">-- found Python include:  /usr/include/python3.6m</span></span><br><span class="line"><span class="string">-- found Python library:  /usr/lib/aarch64-linux-gnu/libpython3.6m.so</span></span><br><span class="line"><span class="string">-- detecting Python 3.7...</span></span><br><span class="line"><span class="string">-- Python 3.7 wasn&#x27;</span>t found</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/detectnet-camera.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/detectnet-console.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/imagenet-camera.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/imagenet-console.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/my-detection.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/my-recognition.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/segnet-batch.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/segnet-camera.py</span><br><span class="line">-- Copying /home/nano/git/jetson-inference/python/examples/segnet-console.py</span><br><span class="line">Configuring <span class="keyword">done</span></span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="compile-and-install"><a href="#compile-and-install" class="headerlink" title="compile and install"></a>compile and install</h3><p>generate and compile </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make</span><br></pre></td></tr></table></figure><p>install jetson-inference </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"><span class="built_in">sudo</span> ldconfig</span><br></pre></td></tr></table></figure><p>output </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">[  1%] Linking CXX shared library ../aarch64/lib/libjetson-utils.so</span><br><span class="line">[ 31%] Built target jetson-utils</span><br><span class="line">[ 32%] Linking CXX shared library aarch64/lib/libjetson-inference.so</span><br><span class="line">[ 43%] Built target jetson-inference</span><br><span class="line">[ 44%] Linking CXX executable ../../aarch64/bin/imagenet-console</span><br><span class="line">[ 45%] Built target imagenet-console</span><br><span class="line">[ 46%] Linking CXX executable ../../aarch64/bin/imagenet-camera</span><br><span class="line">[ 47%] Built target imagenet-camera</span><br><span class="line">[ 47%] Linking CXX executable ../../aarch64/bin/detectnet-console</span><br><span class="line">[ 48%] Built target detectnet-console</span><br><span class="line">[ 49%] Linking CXX executable ../../aarch64/bin/detectnet-camera</span><br><span class="line">[ 50%] Built target detectnet-camera</span><br><span class="line">[ 50%] Linking CXX executable ../../aarch64/bin/segnet-console</span><br><span class="line">[ 51%] Built target segnet-console</span><br><span class="line">[ 52%] Linking CXX executable ../../aarch64/bin/segnet-camera</span><br><span class="line">[ 53%] Built target segnet-camera</span><br><span class="line">[ 54%] Linking CXX executable ../../aarch64/bin/superres-console</span><br><span class="line">[ 55%] Built target superres-console</span><br><span class="line">[ 56%] Linking CXX executable ../../aarch64/bin/homography-console</span><br><span class="line">[ 57%] Built target homography-console</span><br><span class="line">[ 58%] Linking CXX executable ../../aarch64/bin/homography-camera</span><br><span class="line">[ 59%] Built target homography-camera</span><br><span class="line">[ 60%] Automatic MOC <span class="keyword">for</span> target camera-capture</span><br><span class="line">[ 60%] Built target camera-capture_autogen</span><br><span class="line">[ 61%] Linking CXX executable ../../aarch64/bin/camera-capture</span><br><span class="line">[ 64%] Built target camera-capture</span><br><span class="line">[ 65%] Linking CXX executable ../../aarch64/bin/trt-bench</span><br><span class="line">[ 66%] Built target trt-bench</span><br><span class="line">[ 67%] Linking CXX executable ../../aarch64/bin/trt-console</span><br><span class="line">[ 68%] Built target trt-console</span><br><span class="line">[ 69%] Linking CXX executable ../../../aarch64/bin/camera-viewer</span><br><span class="line">[ 70%] Built target camera-viewer</span><br><span class="line">[ 71%] Linking CXX executable ../../../aarch64/bin/v4l2-console</span><br><span class="line">[ 72%] Built target v4l2-console</span><br><span class="line">[ 73%] Linking CXX executable ../../../aarch64/bin/v4l2-display</span><br><span class="line">[ 74%] Built target v4l2-display</span><br><span class="line">[ 75%] Linking CXX executable ../../../aarch64/bin/gl-display-test</span><br><span class="line">[ 76%] Built target gl-display-test</span><br><span class="line">[ 76%] Linking CXX shared library ../../../aarch64/lib/python/2.7/jetson_utils_python.so</span><br><span class="line">[ 82%] Built target jetson-utils-python-27</span><br><span class="line">[ 83%] Linking CXX shared library ../../../aarch64/lib/python/3.6/jetson_utils_python.so</span><br><span class="line">[ 89%] Built target jetson-utils-python-36</span><br><span class="line">[ 90%] Linking CXX shared library ../../aarch64/lib/python/2.7/jetson_inference_python.so</span><br><span class="line">[ 95%] Built target jetson-inference-python-27</span><br><span class="line">[ 96%] Linking CXX shared library ../../aarch64/lib/python/3.6/jetson_inference_python.so</span><br><span class="line">[100%] Built target jetson-inference-python-36</span><br><span class="line">Install the project...</span><br><span class="line">-- Install configuration: <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/detectNet.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/homographyNet.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/imageNet.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/segNet.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/superResNet.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/tensorNet.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/imageNet.cuh</span><br><span class="line">-- Installing: /usr/local/include/jetson-inference/randInt8Calibrator.h</span><br><span class="line">-- Installing: /usr/local/lib/libjetson-inference.so</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/lib/libjetson-inference.so&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/share/jetson-inference/cmake/jetson-inferenceConfig.cmake</span><br><span class="line">-- Installing: /usr/local/share/jetson-inference/cmake/jetson-inferenceConfig-noconfig.cmake</span><br><span class="line">-- Installing: /usr/local/bin/imagenet-console</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/imagenet-console&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/imagenet-camera</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/imagenet-camera&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/detectnet-console</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/detectnet-console&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/detectnet-camera</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/detectnet-camera&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/segnet-console</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/segnet-console&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/segnet-camera</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/segnet-camera&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/superres-console</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/superres-console&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/homography-console</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/homography-console&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/homography-camera</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/homography-camera&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/camera-capture</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/camera-capture&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/XML.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/commandLine.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/filesystem.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/mat33.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/pi.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/rand.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/timespec.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/gstCamera.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/v4l2Camera.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/gstDecoder.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/gstEncoder.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/gstUtility.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaFont.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaMappedMemory.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaNormalize.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaOverlay.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaRGB.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaResize.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaUtility.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaWarp.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/cudaYUV.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/glDisplay.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/glTexture.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/glUtility.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/imageIO.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/loadImage.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/devInput.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/devJoystick.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/devKeyboard.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/Endian.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/IPv4.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/NetworkAdapter.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/Socket.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/Event.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/Mutex.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/Process.h</span><br><span class="line">-- Installing: /usr/local/include/jetson-utils/Thread.h</span><br><span class="line">-- Installing: /usr/local/lib/libjetson-utils.so</span><br><span class="line">-- Installing: /usr/local/share/jetson-utils/cmake/jetson-utilsConfig.cmake</span><br><span class="line">-- Installing: /usr/local/share/jetson-utils/cmake/jetson-utilsConfig-noconfig.cmake</span><br><span class="line">-- Installing: /usr/local/bin/camera-viewer</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/camera-viewer&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/gl-display-test</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/local/bin/gl-display-test&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/local/bin/camera-viewer.py</span><br><span class="line">-- Installing: /usr/local/bin/cuda-from-numpy.py</span><br><span class="line">-- Installing: /usr/local/bin/cuda-to-numpy.py</span><br><span class="line">-- Installing: /usr/local/bin/gl-display-test.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson_utils_python.so</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/lib/python2.7/dist-packages/jetson_utils_python.so&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson/Utils</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson/Utils/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson/utils</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson/utils/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson_utils_python.so</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/lib/python3.6/dist-packages/jetson_utils_python.so&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson/Utils</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson/Utils/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson/utils</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson/utils/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson/__init__.py</span><br><span class="line">-- Installing: /usr/local/bin/detectnet-camera.py</span><br><span class="line">-- Installing: /usr/local/bin/detectnet-console.py</span><br><span class="line">-- Installing: /usr/local/bin/imagenet-camera.py</span><br><span class="line">-- Installing: /usr/local/bin/imagenet-console.py</span><br><span class="line">-- Installing: /usr/local/bin/my-detection.py</span><br><span class="line">-- Installing: /usr/local/bin/my-recognition.py</span><br><span class="line">-- Installing: /usr/local/bin/segnet-batch.py</span><br><span class="line">-- Installing: /usr/local/bin/segnet-camera.py</span><br><span class="line">-- Installing: /usr/local/bin/segnet-console.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson_inference_python.so</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/lib/python2.7/dist-packages/jetson_inference_python.so&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Up-to-date: /usr/lib/python2.7/dist-packages/Jetson</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson/Inference</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/Jetson/Inference/__init__.py</span><br><span class="line">-- Up-to-date: /usr/lib/python2.7/dist-packages/jetson</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson/inference</span><br><span class="line">-- Installing: /usr/lib/python2.7/dist-packages/jetson/inference/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson_inference_python.so</span><br><span class="line">-- Set runtime path of <span class="string">&quot;/usr/lib/python3.6/dist-packages/jetson_inference_python.so&quot;</span> to <span class="string">&quot;&quot;</span></span><br><span class="line">-- Up-to-date: /usr/lib/python3.6/dist-packages/Jetson</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson/Inference</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/Jetson/Inference/__init__.py</span><br><span class="line">-- Up-to-date: /usr/lib/python3.6/dist-packages/jetson</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson/__init__.py</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson/inference</span><br><span class="line">-- Installing: /usr/lib/python3.6/dist-packages/jetson/inference/__init__.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The project will be built to <code>jetson-inference/build/aarch64</code>, with the following directory structure:</p><pre><code>|-build  \aarch64      \bin             where the sample binaries are built to        \networks     where the network models are stored        \images       where the test images are stored      \include         where the headers reside      \lib             where the libraries are build to</code></pre><blockquote><p>These also get installed under <code>/usr/local/</code><br>The Python bindings for the <code>jetson.inference</code> and <code>jetson.utils</code> modules also get installed under <code>/usr/lib/python*/dist-packages/</code>. </p></blockquote><p>view <code>libjetson-utils</code> and <code>libjetson-inference</code> in <code>lib</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ tree build/aarch64/lib</span><br><span class="line">.</span><br><span class="line">├── libjetson-inference.so</span><br><span class="line">├── libjetson-utils.so</span><br><span class="line">└── python</span><br><span class="line">    ├── 2.7</span><br><span class="line">    │   ├── jetson_inference_python.so</span><br><span class="line">    │   └── jetson_utils_python.so</span><br><span class="line">    └── 3.6</span><br><span class="line">        ├── jetson_inference_python.so</span><br><span class="line">        └── jetson_utils_python.so</span><br><span class="line"></span><br><span class="line">3 directories, 6 files</span><br></pre></td></tr></table></figure><p><code>libjetson-inference.so</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ ldd libjetson-inference.so </span><br><span class="line"></span><br><span class="line">linux-vdso.so.1 (0x0000007fa6e8c000)</span><br><span class="line">libpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000007fa6cf3000)</span><br><span class="line">libdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x0000007fa6cde000)</span><br><span class="line">librt.so.1 =&gt; /lib/aarch64-linux-gnu/librt.so.1 (0x0000007fa6cc7000)</span><br><span class="line">libjetson-utils.so =&gt; /home/nano/git/jetson-inference/build/aarch64/lib/libjetson-utils.so (0x0000007fa6b6f000)</span><br><span class="line">libnvinfer.so.5 =&gt; /usr/lib/aarch64-linux-gnu/libnvinfer.so.5 (0x0000007f9dc23000)</span><br><span class="line">libnvinfer_plugin.so.5 =&gt; /usr/lib/aarch64-linux-gnu/libnvinfer_plugin.so.5 (0x0000007f9d94d000)</span><br><span class="line">libnvparsers.so.5 =&gt; /usr/lib/aarch64-linux-gnu/libnvparsers.so.5 (0x0000007f9d60e000)</span><br><span class="line">libnvonnxparser.so.0 =&gt; /usr/lib/aarch64-linux-gnu/libnvonnxparser.so.0 (0x0000007f9d1ea000)</span><br><span class="line">libopencv_calib3d.so.3.3 =&gt; /usr/lib/libopencv_calib3d.so.3.3 (0x0000007f9d0be000)</span><br><span class="line">libopencv_core.so.3.3 =&gt; /usr/lib/libopencv_core.so.3.3 (0x0000007f9cde9000)</span><br><span class="line">libstdc++.so.6 =&gt; /usr/lib/aarch64-linux-gnu/libstdc++.so.6 (0x0000007f9cc56000)</span><br><span class="line">libm.so.6 =&gt; /lib/aarch64-linux-gnu/libm.so.6 (0x0000007f9cb9c000)</span><br><span class="line">libgcc_s.so.1 =&gt; /lib/aarch64-linux-gnu/libgcc_s.so.1 (0x0000007f9cb78000)</span><br><span class="line">libc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000007f9ca1f000)</span><br><span class="line">/lib/ld-linux-aarch64.so.1 (0x0000007fa6e61000)</span><br><span class="line">libGL.so.1 =&gt; /usr/lib/aarch64-linux-gnu/libGL.so.1 (0x0000007f9c920000)</span><br><span class="line">libGLEW.so.2.0 =&gt; /usr/lib/aarch64-linux-gnu/libGLEW.so.2.0 (0x0000007f9c874000)</span><br><span class="line">libgstreamer-1.0.so.0 =&gt; /usr/lib/aarch64-linux-gnu/libgstreamer-1.0.so.0 (0x0000007f9c744000)</span><br><span class="line">libgstapp-1.0.so.0 =&gt; /usr/lib/aarch64-linux-gnu/libgstapp-1.0.so.0 (0x0000007f9c726000)</span><br><span class="line">libcudnn.so.7 =&gt; /usr/lib/aarch64-linux-gnu/libcudnn.so.7 (0x0000007f858c0000)</span><br><span class="line">libcublas.so.10.0 =&gt; /usr/local/cuda-10.0/targets/aarch64-linux/lib/libcublas.so.10.0 (0x0000007f7ff59000)</span><br><span class="line">libcudart.so.10.0 =&gt; /usr/local/cuda-10.0/targets/aarch64-linux/lib/libcudart.so.10.0 (0x0000007f7fee8000)</span><br><span class="line">libopencv_flann.so.3.3 =&gt; /usr/lib/libopencv_flann.so.3.3 (0x0000007f7fe85000)</span><br><span class="line">libopencv_imgproc.so.3.3 =&gt; /usr/lib/libopencv_imgproc.so.3.3 (0x0000007f7f6b8000)</span><br><span class="line"></span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="imageNet-demo"><a href="#imageNet-demo" class="headerlink" title="imageNet demo"></a>imageNet demo</h3><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><pre><code>$ cd etson-inference/build/aarch64/bin$ sudo ./imagenet-console --network=resnet-18 images/orange_0.jpg output_0.jpg</code></pre><p>output</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">imageNet -- loading classification network model from:</span><br><span class="line">         -- prototxt     networks/ResNet-18/deploy.prototxt</span><br><span class="line">         -- model        networks/ResNet-18/ResNet-18.caffemodel</span><br><span class="line">         -- class_labels networks/ilsvrc12_synset_words.txt</span><br><span class="line">         -- input_blob   <span class="string">&#x27;data&#x27;</span></span><br><span class="line">         -- output_blob  <span class="string">&#x27;prob&#x27;</span></span><br><span class="line">         -- batch_size   1</span><br><span class="line"></span><br><span class="line">[TRT]   TensorRT version 5.1.6</span><br><span class="line">[TRT]   loading NVIDIA plugins...</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - GridAnchor_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - NMS_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Reorg_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Region_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Clip_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - LReLU_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - PriorBox_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Normalize_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - RPROI_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - BatchedNMS_TRT</span><br><span class="line">[TRT]   completed loading NVIDIA plugins.</span><br><span class="line">[TRT]   detected model format - caffe  (extension <span class="string">&#x27;.caffemodel&#x27;</span>)</span><br><span class="line">[TRT]   desired precision specified <span class="keyword">for</span> GPU: FASTEST</span><br><span class="line">[TRT]   requested fasted precision <span class="keyword">for</span> device GPU without providing valid calibrator, disabling INT8</span><br><span class="line">[TRT]   native precisions detected <span class="keyword">for</span> GPU:  FP32, FP16</span><br><span class="line">[TRT]   selecting fastest native precision <span class="keyword">for</span> GPU:  FP16</span><br><span class="line">[TRT]   attempting to open engine cache file networks/ResNet-18/ResNet-18.caffemodel.1.1.GPU.FP16.engine</span><br><span class="line">[TRT]   cache file not found, profiling network model on device GPU</span><br><span class="line">[TRT]   device GPU, loading networks/ResNet-18/deploy.prototxt networks/ResNet-18/ResNet-18.caffemodel</span><br><span class="line">[TRT]   retrieved Output tensor <span class="string">&quot;prob&quot;</span>:  1000x1x1</span><br><span class="line">[TRT]   retrieved Input tensor <span class="string">&quot;data&quot;</span>:  3x224x224</span><br><span class="line">[TRT]   device GPU, configuring CUDA engine</span><br><span class="line">[TRT]   device GPU, building FP16:  ON</span><br><span class="line">[TRT]   device GPU, building INT8:  OFF</span><br><span class="line">[TRT]   device GPU, building CUDA engine (this may take a few minutes the first time a network is loaded)</span><br><span class="line">[TRT]   device GPU, completed building CUDA engine</span><br><span class="line">[TRT]   network profiling complete, writing engine cache to networks/ResNet-18/ResNet-18.caffemodel.1.1.GPU.FP16.engine</span><br><span class="line">[TRT]   device GPU, completed writing engine cache to networks/ResNet-18/ResNet-18.caffemodel.1.1.GPU.FP16.engine</span><br><span class="line">[TRT]   device GPU, networks/ResNet-18/ResNet-18.caffemodel loaded</span><br><span class="line">[TRT]   device GPU, CUDA engine context initialized with 2 bindings</span><br><span class="line">[TRT]   binding -- index   0</span><br><span class="line">               -- name    <span class="string">&#x27;data&#x27;</span></span><br><span class="line">               -- <span class="built_in">type</span>    FP32</span><br><span class="line">               -- <span class="keyword">in</span>/out  INPUT</span><br><span class="line">               -- <span class="comment"># dims  3</span></span><br><span class="line">               -- dim <span class="comment">#0  3 (CHANNEL)</span></span><br><span class="line">               -- dim <span class="comment">#1  224 (SPATIAL)</span></span><br><span class="line">               -- dim <span class="comment">#2  224 (SPATIAL)</span></span><br><span class="line">[TRT]   binding -- index   1</span><br><span class="line">               -- name    <span class="string">&#x27;prob&#x27;</span></span><br><span class="line">               -- <span class="built_in">type</span>    FP32</span><br><span class="line">               -- <span class="keyword">in</span>/out  OUTPUT</span><br><span class="line">               -- <span class="comment"># dims  3</span></span><br><span class="line">               -- dim <span class="comment">#0  1000 (CHANNEL)</span></span><br><span class="line">               -- dim <span class="comment">#1  1 (SPATIAL)</span></span><br><span class="line">               -- dim <span class="comment">#2  1 (SPATIAL)</span></span><br><span class="line">[TRT]   binding to input 0 data  binding index:  0</span><br><span class="line">[TRT]   binding to input 0 data  dims (b=1 c=3 h=224 w=224) size=602112</span><br><span class="line">[TRT]   binding to output 0 prob  binding index:  1</span><br><span class="line">[TRT]   binding to output 0 prob  dims (b=1 c=1000 h=1 w=1) size=4000</span><br><span class="line">device GPU, networks/ResNet-18/ResNet-18.caffemodel initialized.</span><br><span class="line">[TRT]   networks/ResNet-18/ResNet-18.caffemodel loaded</span><br><span class="line">imageNet -- loaded 1000 class info entries</span><br><span class="line">networks/ResNet-18/ResNet-18.caffemodel initialized.</span><br><span class="line">[image] loaded <span class="string">&#x27;images/orange_0.jpg&#x27;</span>  (1920 x 1920, 3 channels)</span><br><span class="line">class 0950 - 0.996028  (orange)</span><br><span class="line">imagenet-console:  <span class="string">&#x27;images/orange_0.jpg&#x27;</span> -&gt; 99.60276% class <span class="comment">#950 (orange)</span></span><br><span class="line"></span><br><span class="line">[TRT]   ------------------------------------------------</span><br><span class="line">[TRT]   Timing Report networks/ResNet-18/ResNet-18.caffemodel</span><br><span class="line">[TRT]   ------------------------------------------------</span><br><span class="line">[TRT]   Pre-Process   CPU   0.10824ms  CUDA   0.34156ms</span><br><span class="line">[TRT]   Network       CPU  12.91854ms  CUDA  12.47026ms</span><br><span class="line">[TRT]   Post-Process  CPU   0.80311ms  CUDA   0.82672ms</span><br><span class="line">[TRT]   Total         CPU  13.82989ms  CUDA  13.63854ms</span><br><span class="line">[TRT]   ------------------------------------------------</span><br><span class="line"></span><br><span class="line">[TRT]   note -- when processing a single image, run <span class="string">&#x27;sudo jetson_clocks&#x27;</span> before</span><br><span class="line">                to <span class="built_in">disable</span> DVFS <span class="keyword">for</span> more accurate profiling/timing measurements</span><br><span class="line"></span><br><span class="line">imagenet-console:  attempting to save output image to <span class="string">&#x27;output_0.jpg&#x27;</span></span><br><span class="line">imagenet-console:  completed saving <span class="string">&#x27;output_0.jpg&#x27;</span></span><br><span class="line">imagenet-console:  shutting down...</span><br><span class="line">imagenet-console:  shutdown complete</span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><pre><code>$ cd etson-inference/build/aarch64/bin$ sudo ./imagenet-console.py --network=resnet-18 images/orange_0.jpg output_0.jpg</code></pre><p>output</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">jetson.inference.__init__.py</span><br><span class="line">jetson.inference -- initializing Python 2.7 bindings...</span><br><span class="line">jetson.inference -- registering module types...</span><br><span class="line">jetson.inference -- <span class="keyword">done</span> registering module types</span><br><span class="line">jetson.inference -- <span class="keyword">done</span> Python 2.7 binding initialization</span><br><span class="line">jetson.utils.__init__.py</span><br><span class="line">jetson.utils -- initializing Python 2.7 bindings...</span><br><span class="line">jetson.utils -- registering module <span class="built_in">functions</span>...</span><br><span class="line">jetson.utils -- <span class="keyword">done</span> registering module <span class="built_in">functions</span></span><br><span class="line">jetson.utils -- registering module types...</span><br><span class="line">jetson.utils -- <span class="keyword">done</span> registering module types</span><br><span class="line">jetson.utils -- <span class="keyword">done</span> Python 2.7 binding initialization</span><br><span class="line">[image] loaded <span class="string">&#x27;images/orange_0.jpg&#x27;</span>  (1920 x 1920, 3 channels)</span><br><span class="line">jetson.inference -- PyTensorNet_New()</span><br><span class="line">jetson.inference -- PyImageNet_Init()</span><br><span class="line">jetson.inference -- imageNet loading network using argv <span class="built_in">command</span> line params</span><br><span class="line">jetson.inference -- imageNet.__init__() argv[0] = <span class="string">&#x27;./imagenet-console.py&#x27;</span></span><br><span class="line">jetson.inference -- imageNet.__init__() argv[1] = <span class="string">&#x27;--network=resnet-18&#x27;</span></span><br><span class="line">jetson.inference -- imageNet.__init__() argv[2] = <span class="string">&#x27;images/orange_0.jpg&#x27;</span></span><br><span class="line">jetson.inference -- imageNet.__init__() argv[3] = <span class="string">&#x27;output_0.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line">imageNet -- loading classification network model from:</span><br><span class="line">         -- prototxt     networks/ResNet-18/deploy.prototxt</span><br><span class="line">         -- model        networks/ResNet-18/ResNet-18.caffemodel</span><br><span class="line">         -- class_labels networks/ilsvrc12_synset_words.txt</span><br><span class="line">         -- input_blob   <span class="string">&#x27;data&#x27;</span></span><br><span class="line">         -- output_blob  <span class="string">&#x27;prob&#x27;</span></span><br><span class="line">         -- batch_size   1</span><br><span class="line"></span><br><span class="line">[TRT]   TensorRT version 5.1.6</span><br><span class="line">[TRT]   loading NVIDIA plugins...</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - GridAnchor_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - NMS_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Reorg_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Region_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Clip_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - LReLU_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - PriorBox_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - Normalize_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - RPROI_TRT</span><br><span class="line">[TRT]   Plugin Creator registration succeeded - BatchedNMS_TRT</span><br><span class="line">[TRT]   completed loading NVIDIA plugins.</span><br><span class="line">[TRT]   detected model format - caffe  (extension <span class="string">&#x27;.caffemodel&#x27;</span>)</span><br><span class="line">[TRT]   desired precision specified <span class="keyword">for</span> GPU: FASTEST</span><br><span class="line">[TRT]   requested fasted precision <span class="keyword">for</span> device GPU without providing valid calibrator, disabling INT8</span><br><span class="line">[TRT]   native precisions detected <span class="keyword">for</span> GPU:  FP32, FP16</span><br><span class="line">[TRT]   selecting fastest native precision <span class="keyword">for</span> GPU:  FP16</span><br><span class="line">[TRT]   attempting to open engine cache file networks/ResNet-18/ResNet-18.caffemodel.1.1.GPU.FP16.engine</span><br><span class="line">[TRT]   loading network profile from engine cache... networks/ResNet-18/ResNet-18.caffemodel.1.1.GPU.FP16.engine</span><br><span class="line">[TRT]   device GPU, networks/ResNet-18/ResNet-18.caffemodel loaded</span><br><span class="line">[TRT]   device GPU, CUDA engine context initialized with 2 bindings</span><br><span class="line">[TRT]   binding -- index   0</span><br><span class="line">               -- name    <span class="string">&#x27;data&#x27;</span></span><br><span class="line">               -- <span class="built_in">type</span>    FP32</span><br><span class="line">               -- <span class="keyword">in</span>/out  INPUT</span><br><span class="line">               -- <span class="comment"># dims  3</span></span><br><span class="line">               -- dim <span class="comment">#0  3 (CHANNEL)</span></span><br><span class="line">               -- dim <span class="comment">#1  224 (SPATIAL)</span></span><br><span class="line">               -- dim <span class="comment">#2  224 (SPATIAL)</span></span><br><span class="line">[TRT]   binding -- index   1</span><br><span class="line">               -- name    <span class="string">&#x27;prob&#x27;</span></span><br><span class="line">               -- <span class="built_in">type</span>    FP32</span><br><span class="line">               -- <span class="keyword">in</span>/out  OUTPUT</span><br><span class="line">               -- <span class="comment"># dims  3</span></span><br><span class="line">               -- dim <span class="comment">#0  1000 (CHANNEL)</span></span><br><span class="line">               -- dim <span class="comment">#1  1 (SPATIAL)</span></span><br><span class="line">               -- dim <span class="comment">#2  1 (SPATIAL)</span></span><br><span class="line">[TRT]   binding to input 0 data  binding index:  0</span><br><span class="line">[TRT]   binding to input 0 data  dims (b=1 c=3 h=224 w=224) size=602112</span><br><span class="line">[TRT]   binding to output 0 prob  binding index:  1</span><br><span class="line">[TRT]   binding to output 0 prob  dims (b=1 c=1000 h=1 w=1) size=4000</span><br><span class="line">device GPU, networks/ResNet-18/ResNet-18.caffemodel initialized.</span><br><span class="line">[TRT]   networks/ResNet-18/ResNet-18.caffemodel loaded</span><br><span class="line">imageNet -- loaded 1000 class info entries</span><br><span class="line">networks/ResNet-18/ResNet-18.caffemodel initialized.</span><br><span class="line">class 0950 - 0.996028  (orange)</span><br><span class="line">image is recognized as <span class="string">&#x27;orange&#x27;</span> (class <span class="comment">#950) with 99.602759% confidence</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[TRT]   ------------------------------------------------</span><br><span class="line">[TRT]   Timing Report networks/ResNet-18/ResNet-18.caffemodel</span><br><span class="line">[TRT]   ------------------------------------------------</span><br><span class="line">[TRT]   Pre-Process   CPU   0.06884ms  CUDA   0.32849ms</span><br><span class="line">[TRT]   Network       CPU  11.44888ms  CUDA  11.01536ms</span><br><span class="line">[TRT]   Post-Process  CPU   0.20783ms  CUDA   0.20708ms</span><br><span class="line">[TRT]   Total         CPU  11.72555ms  CUDA  11.55094ms</span><br><span class="line">[TRT]   ------------------------------------------------</span><br><span class="line"></span><br><span class="line">[TRT]   note -- when processing a single image, run <span class="string">&#x27;sudo jetson_clocks&#x27;</span> before</span><br><span class="line">                to <span class="built_in">disable</span> DVFS <span class="keyword">for</span> more accurate profiling/timing measurements</span><br><span class="line"></span><br><span class="line">jetson.utils -- PyFont_New()</span><br><span class="line">jetson.utils -- PyFont_Init()</span><br><span class="line">jetson.utils -- PyFont_Dealloc()</span><br><span class="line">jetson.utils -- freeing CUDA mapped memory</span><br><span class="line">PyTensorNet_Dealloc()</span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="my-recognition"><a href="#my-recognition" class="headerlink" title="my-recognition"></a>my-recognition</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># build</span></span><br><span class="line">$ <span class="built_in">cd</span> jetson-inference/examples/my-recognition</span><br><span class="line">$ <span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build &amp;&amp; cmake-gui ..</span><br></pre></td></tr></table></figure><p><img src="https://kezunlin.me/images/posts/1864218-20191220111051661-1411779322.png" alt="my-recognition cmake-gui"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># compile </span></span><br><span class="line">$ make </span><br><span class="line"></span><br><span class="line">Scanning dependencies of target my-recognition</span><br><span class="line">[ 50%] Building CXX object CMakeFiles/my-recognition.dir/my-recognition.cpp.o</span><br><span class="line">[100%] Linking CXX executable my-recognition</span><br><span class="line">[100%] Built target my-recognition</span><br><span class="line"></span><br><span class="line"><span class="comment"># view libraries</span></span><br><span class="line">$ ldd my-recognition </span><br><span class="line">linux-vdso.so.1 (0x0000007fb5546000)</span><br><span class="line">libjetson-inference.so =&gt; /usr/local/lib/libjetson-inference.so (0x0000007fb53ea000)</span><br><span class="line">libjetson-utils.so =&gt; /usr/local/lib/libjetson-utils.so (0x0000007fb5292000)</span><br><span class="line">libstdc++.so.6 =&gt; /usr/lib/aarch64-linux-gnu/libstdc++.so.6 (0x0000007fb50db000)</span><br><span class="line">libc.so.6 =&gt; /lib/aarch64-linux-gnu/libc.so.6 (0x0000007fb4f82000)</span><br><span class="line">/lib/ld-linux-aarch64.so.1 (0x0000007fb551b000)</span><br><span class="line">libpthread.so.0 =&gt; /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000007fb4f56000)</span><br><span class="line">libdl.so.2 =&gt; /lib/aarch64-linux-gnu/libdl.so.2 (0x0000007fb4f41000)</span><br><span class="line">librt.so.1 =&gt; /lib/aarch64-linux-gnu/librt.so.1 (0x0000007fb4f2a000)</span><br><span class="line">libnvinfer.so.5 =&gt; /usr/lib/aarch64-linux-gnu/libnvinfer.so.5 (0x0000007fabfde000)</span><br><span class="line">libnvinfer_plugin.so.5 =&gt; /usr/lib/aarch64-linux-gnu/libnvinfer_plugin.so.5 (0x0000007fabd08000)</span><br><span class="line">libnvparsers.so.5 =&gt; /usr/lib/aarch64-linux-gnu/libnvparsers.so.5 (0x0000007fab9c9000)</span><br><span class="line">libnvonnxparser.so.0 =&gt; /usr/lib/aarch64-linux-gnu/libnvonnxparser.so.0 (0x0000007fab5a5000)</span><br><span class="line">libopencv_calib3d.so.3.3 =&gt; /usr/lib/libopencv_calib3d.so.3.3 (0x0000007fab479000)</span><br><span class="line">libopencv_core.so.3.3 =&gt; /usr/lib/libopencv_core.so.3.3 (0x0000007fab1a4000)</span><br></pre></td></tr></table></figure><p>run and get result</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./build/my-recognition polar_bear.jpg</span><br><span class="line"></span><br><span class="line">class 0296 - 0.997434  (ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus)</span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="imagenet-camera"><a href="#imagenet-camera" class="headerlink" title="imagenet-camera"></a>imagenet-camera</h3><p><code>imagenet-camera</code> usage</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ ./imagenet-camera --<span class="built_in">help</span></span><br><span class="line">usage: imagenet-camera [-h] [--network NETWORK] [--camera CAMERA]</span><br><span class="line">                       [--width WIDTH] [--height HEIGHT]</span><br><span class="line"></span><br><span class="line">Classify a live camera stream using an image recognition DNN.</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  --network NETWORK pre-trained model to load (see below <span class="keyword">for</span> options)</span><br><span class="line">  --camera CAMERA   index of the MIPI CSI camera to use (e.g. CSI camera 0),</span><br><span class="line">                    or <span class="keyword">for</span> VL42 cameras, the /dev/video device to use.</span><br><span class="line">                    by default, MIPI CSI camera 0 will be used.</span><br><span class="line">  --width WIDTH     desired width of camera stream (default is 1280 pixels)</span><br><span class="line">  --height HEIGHT   desired height of camera stream (default is 720 pixels)</span><br><span class="line"></span><br><span class="line">imageNet arguments: </span><br><span class="line">  --network NETWORK    pre-trained model to load, one of the following:</span><br><span class="line">                           * alexnet</span><br><span class="line">                           * googlenet (default)</span><br><span class="line">                           * googlenet-12</span><br><span class="line">                           * resnet-18</span><br><span class="line">                           * resnet-50</span><br><span class="line">                           * resnet-101</span><br><span class="line">                           * resnet-152</span><br><span class="line">                           * vgg-16</span><br><span class="line">                           * vgg-19</span><br><span class="line">                           * inception-v4</span><br><span class="line">  --model MODEL        path to custom model to load (caffemodel, uff, or onnx)</span><br><span class="line">  --prototxt PROTOTXT  path to custom prototxt to load (<span class="keyword">for</span> .caffemodel only)</span><br><span class="line">  --labels LABELS      path to text file containing the labels <span class="keyword">for</span> each class</span><br><span class="line">  --input_blob INPUT   name of the input layer (default is <span class="string">&#x27;data&#x27;</span>)</span><br><span class="line">  --output_blob OUTPUT name of the output layer (default is <span class="string">&#x27;prob&#x27;</span>)</span><br><span class="line">  --batch_size BATCH   maximum batch size (default is 1)</span><br><span class="line">  --profile            <span class="built_in">enable</span> layer profiling <span class="keyword">in</span> TensorRT</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>camera type </p><ul><li><code>MIPI CSI cameras</code> are used by specifying the sensor index (<code>0</code> or <code>1</code>, ect.)</li><li><code>V4L2 USB cameras</code> are used by specifying their &#x2F;dev&#x2F;video node (<code>/dev/video0</code>, <code>/dev/video1</code>, ect.)<blockquote><p>The default is to use MIPI CSI sensor 0 (<code>--camera=0</code>)</p></blockquote></li></ul><p>Query the available formats with the following commands:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt-get install -y v4l-utils</span><br><span class="line">$ v4l2-ctl --list-formats-ext</span><br><span class="line"></span><br><span class="line">ioctl: VIDIOC_ENUM_FMT</span><br><span class="line">Index       : 0</span><br><span class="line">Type        : Video Capture</span><br><span class="line">Pixel Format: <span class="string">&#x27;MJPG&#x27;</span> (compressed)</span><br><span class="line">Name        : Motion-JPEG</span><br><span class="line">Size: Discrete 1920x1080</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 160x120</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 176x144</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 320x240</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 352x288</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 640x360</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 640x480</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 1280x720</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 1280x1024</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line"></span><br><span class="line">Index       : 1</span><br><span class="line">Type        : Video Capture</span><br><span class="line">Pixel Format: <span class="string">&#x27;YUYV&#x27;</span></span><br><span class="line">Name        : YUYV 4:2:2</span><br><span class="line">Size: Discrete 1920x1080</span><br><span class="line">Interval: Discrete 0.200s (5.000 fps)</span><br><span class="line">Size: Discrete 160x120</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 176x144</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 320x240</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 352x288</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 640x360</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 640x480</span><br><span class="line">Interval: Discrete 0.033s (30.000 fps)</span><br><span class="line">Size: Discrete 1280x720</span><br><span class="line">Interval: Discrete 0.100s (10.000 fps)</span><br><span class="line">Size: Discrete 1280x1024</span><br><span class="line">Interval: Discrete 0.200s (5.000 fps)</span><br></pre></td></tr></table></figure><p>run demo </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./imagenet-camera --network=resnet-18  --camera=0 --width=640 --height=480</span><br></pre></td></tr></table></figure><h3 id="nvpmodel"><a href="#nvpmodel" class="headerlink" title="nvpmodel"></a>nvpmodel</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/nvpmodel.conf</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> nvpmodel -q –-verbose <span class="comment"># 查看当前的模式</span></span><br><span class="line"><span class="built_in">sudo</span> nvpmodel -p –-verbose <span class="comment"># 打印支持的所有模式及其配置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> nvpmodel -m 0 <span class="comment"># 启动最高性能，此时所有CPU均已启动，但对应的主频还不是最高的</span></span><br><span class="line"><span class="built_in">sudo</span> ~/jetson_clocks.sh <span class="comment"># 开启最大频率</span></span><br></pre></td></tr></table></figure><h2 id="Use-DeepStream-On-Jetson-Nano"><a href="#Use-DeepStream-On-Jetson-Nano" class="headerlink" title="Use DeepStream On Jetson Nano"></a>Use DeepStream On Jetson Nano</h2><h3 id="install-DeepStream-SDK"><a href="#install-DeepStream-SDK" class="headerlink" title="install DeepStream SDK"></a>install DeepStream SDK</h3><ul><li><p>DeepStream SDK 4.0.1 </p><blockquote><p><code>DeepStream SDK 4.0.1</code> requires the installation of <code>JetPack 4.2.2</code>.<br> donwload <code>deepstream_sdk_v4.0.1_jetson.tbz2</code> from <a href="https://developer.nvidia.com/deepstream-download">here</a></p></blockquote></li><li><p>DeepStream SDK 4.0.2 </p><blockquote><p><code>DeepStream SDK 4.0.2</code> requires the installation of <code>JetPack 4.3</code>.<br>donwload <code>deepstream_sdk_v4.0.2_jetson.tbz2</code> or <code>deepstream-4.0_4.0.2-1_arm64.deb</code> from <a href="https://developer.nvidia.com/deepstream-download">here</a></p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># (1) install prerequisite packages for installing the DeepStream SDK </span></span><br><span class="line"><span class="built_in">sudo</span> apt install \</span><br><span class="line">    libssl1.0.0 \</span><br><span class="line">    libgstreamer1.0-0 \</span><br><span class="line">    gstreamer1.0-tools \</span><br><span class="line">    gstreamer1.0-plugins-good \</span><br><span class="line">    gstreamer1.0-plugins-bad \</span><br><span class="line">    gstreamer1.0-plugins-ugly \</span><br><span class="line">    gstreamer1.0-libav \</span><br><span class="line">    libgstrtspserver-1.0-0 \</span><br><span class="line">    libjansson4=2.11-1</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> apt-get install librdkafka1=0.11.3-1build1</span><br><span class="line"></span><br><span class="line"><span class="comment"># (1) install deepstream sdk from tar file </span></span><br><span class="line">tar -xpvf deepstream_sdk_v4.0.2_jetson.tbz2</span><br><span class="line"><span class="built_in">cd</span> deepstream_sdk_v4.0.2_jetson</span><br><span class="line"><span class="built_in">sudo</span> tar -xvpf binaries.tbz2 -C /</span><br><span class="line"><span class="built_in">sudo</span> ./install.sh</span><br><span class="line"><span class="built_in">sudo</span> ldconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># (2) or install deepstream sdk from deb </span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install ./deepstream-4.0_4.0.2-1_arm64.deb</span><br><span class="line"></span><br><span class="line"><span class="comment">## NOTE: sources and samples folders will be found in /opt/nvidia/deepstream/deepstream-4.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># To boost the clocks</span></span><br><span class="line"><span class="comment"># After you have installed DeepStream SDK, </span></span><br><span class="line"><span class="comment"># run these commands on the Jetson device to boost the clocks:</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> nvpmodel -m 0 </span><br><span class="line"><span class="built_in">sudo</span> jetson_clocks</span><br></pre></td></tr></table></figure><h3 id="running-deepstream-app"><a href="#running-deepstream-app" class="headerlink" title="running deepstream-app"></a>running deepstream-app</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ deepstream-app --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  deepstream-app [OPTION?] Nvidia DeepStream Demo</span><br><span class="line"></span><br><span class="line">Help Options:</span><br><span class="line">  -h, --<span class="built_in">help</span>                        Show <span class="built_in">help</span> options</span><br><span class="line">  --help-all                        Show all <span class="built_in">help</span> options</span><br><span class="line">  --help-gst                        Show GStreamer Options</span><br><span class="line"></span><br><span class="line">Application Options:</span><br><span class="line">  -v, --version                     Print DeepStreamSDK version</span><br><span class="line">  -t, --tiledtext                   Display Bounding box labels <span class="keyword">in</span> tiled mode</span><br><span class="line">  --version-all                     Print DeepStreamSDK and dependencies version</span><br><span class="line">  -c, --cfg-file                    Set the config file</span><br><span class="line">  -i, --input-file                  Set the input file</span><br></pre></td></tr></table></figure><blockquote><p>deepstream-app -c <path_to_config_file></p></blockquote><p>export GST_PLUGIN_PATH&#x3D;”&#x2F;usr&#x2F;lib&#x2F;aarch64-linux-gnu&#x2F;gstreamer-1.0&#x2F;“</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/opt/nvidia/deepstream/deepstream-4.0/sources/apps/sample_apps/deepstream-test1$ deepstream-test1-app ~/video/pengpeng.avi </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /opt/nvidia/deepstream/deepstream-4.0/samples/configs/deepstream-app</span><br><span class="line">deepstream-app -c config_infer_primary_nano.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># error occurs</span></span><br><span class="line">** ERROR: &lt;create_multi_source_bin:682&gt;: Failed to create element <span class="string">&#x27;src_bin_muxer&#x27;</span></span><br><span class="line">** ERROR: &lt;create_multi_source_bin:745&gt;: create_multi_source_bin failed</span><br><span class="line">** ERROR: &lt;create_pipeline:1045&gt;: create_pipeline failed</span><br><span class="line">** ERROR: &lt;main:632&gt;: Failed to create pipeline</span><br><span class="line">Quitting</span><br><span class="line">App run failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># solutions </span></span><br><span class="line"><span class="built_in">rm</span> ~/.cache/gstreamer-1.0/registry.aarch64.bin </span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> DISPLAY=:1</span><br><span class="line">deepstream-app -c config_infer_primary_nano.txt </span><br><span class="line"></span><br><span class="line">(deepstream-app:16051): GStreamer-CRITICAL **: 16:31:26.057: gst_element_get_static_pad: assertion <span class="string">&#x27;GST_IS_ELEMENT (element)&#x27;</span> failed</span><br><span class="line">Segmentation fault (core dumped)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://developer.nvidia.com/embedded/twodaystoademo">twodaystoademo</a></li><li><a href="https://developer.nvidia.com/embedded/jetson-nano-dl-inference-benchmarks">jetson-nano-dl-inference-benchmarks</a></li><li><a href="https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#write">get-started-jetson-nano-devkit</a></li><li><a href="https://www.stereolabs.com/blog/getting-started-with-jetson-nano/">getting-started-with-jetson-nano</a></li><li><a href="https://devtalk.nvidia.com/default/topic/1049855/jetson-nano/jetson-nano-sd-card-image-abnormal/">jetson-nano-sd-card-image-abnormal</a></li><li><a href="https://www.pyimagesearch.com/2019/05/06/getting-started-with-the-nvidia-jetson-nano/">getting-started-with-the-nvidia-jetson-nano</a></li><li><a href="https://www.jetsonhacks.com/2019/10/01/jetson-nano-visual-studio-code-python/">jetson-nano-visual-studio-code-python</a></li><li><a href="https://github.com/JetsonHacksNano/installVSCode">installVSCode on jetson nano</a></li><li><a href="https://docs.nvidia.com/metropolis/deepstream/dev-guide/index.html#page/DeepStream_Development_Guide/deepstream_quick_start.html#wwpID0E2HA">deepstream sdk</a></li><li><a href="https://docs.nvidia.com/metropolis/deepstream/dev-guide/index.html#page/DeepStream%2520Development%2520Guide%2Fdeepstream_quick_start.html%23wwpID0E0BB0HA">deepstream app</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;12&#x2F;09: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Series&quot;&gt;&lt;a href=&quot;#Series&quot; class=&quot;headerlink&quot; title=&quot;Series&quot;&gt;&lt;/a&gt;Series&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://kezunlin.me/post/4eb7fc</summary>
      
    
    
    
    <category term="deep learning" scheme="https://kezunlin.me/categories/deep-learning/"/>
    
    
    <category term="Jetson Nano" scheme="https://kezunlin.me/tags/Jetson-Nano/"/>
    
    <category term="Jetson TX1" scheme="https://kezunlin.me/tags/Jetson-TX1/"/>
    
    <category term="Jetson TX2" scheme="https://kezunlin.me/tags/Jetson-TX2/"/>
    
    <category term="Jetson AGX Xaiver" scheme="https://kezunlin.me/tags/Jetson-AGX-Xaiver/"/>
    
    <category term="JetPack SDK" scheme="https://kezunlin.me/tags/JetPack-SDK/"/>
    
    <category term="TensorRT" scheme="https://kezunlin.me/tags/TensorRT/"/>
    
    <category term="jetson-inference" scheme="https://kezunlin.me/tags/jetson-inference/"/>
    
  </entry>
  
  <entry>
    <title>python convert yaml to json</title>
    <link href="https://kezunlin.me/blog/python-convert-yaml-to-json/"/>
    <id>https://kezunlin.me/blog/python-convert-yaml-to-json/</id>
    <published>2019-11-29T08:50:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="links-yaml"><a href="#links-yaml" class="headerlink" title="links.yaml"></a>links.yaml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mylinks:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">官方博客</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">https://kezunlin.me/images/kezunlin_avatar.jpg</span></span><br><span class="line">  <span class="attr">site:</span> <span class="string">https://kezunlin.me</span></span><br><span class="line">  <span class="attr">info:</span> <span class="string">C++</span> <span class="string">&amp;&amp;</span> <span class="string">Python.</span> <span class="string">CV</span> <span class="string">&amp;&amp;</span> <span class="string">DL.</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">闪烁之狐</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">https://blinkfox.github.io/medias/logo.png</span></span><br><span class="line">  <span class="attr">site:</span> <span class="string">https://blinkfox.github.io/</span></span><br><span class="line">  <span class="attr">info:</span> <span class="string">blinkfox</span></span><br></pre></td></tr></table></figure><h3 id="output-json"><a href="#output-json" class="headerlink" title="output.json"></a>output.json</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://kezunlin.me/images/kezunlin_avatar.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;官方博客&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C++ &amp;&amp; Python. CV &amp;&amp; DL.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://kezunlin.me&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;前去学习&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blinkfox.github.io/medias/logo.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;闪烁之狐&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blinkfox&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blinkfox.github.io/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;前去学习&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml </span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">result_list = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./links.yaml&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    obj = yaml.load(f) <span class="comment"># dict </span></span><br><span class="line">    <span class="comment">#print(obj[&quot;mylinks&quot;])</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> obj[<span class="string">&quot;mylinks&quot;</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(item[<span class="string">&quot;nickname&quot;</span>])</span><br><span class="line">            <span class="built_in">print</span>(item[<span class="string">&quot;avatar&quot;</span>])</span><br><span class="line">            <span class="built_in">print</span>(item[<span class="string">&quot;site&quot;</span>])</span><br><span class="line">            <span class="built_in">print</span>(item[<span class="string">&quot;info&quot;</span>])</span><br><span class="line">        new_item = &#123;</span><br><span class="line">            <span class="string">&quot;avatar&quot;</span>: item[<span class="string">&quot;avatar&quot;</span>],</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: item[<span class="string">&quot;nickname&quot;</span>],</span><br><span class="line">            <span class="string">&quot;introduction&quot;</span>: item[<span class="string">&quot;info&quot;</span>],</span><br><span class="line">            <span class="string">&quot;url&quot;</span>: item[<span class="string">&quot;site&quot;</span>],</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        result_list.append(new_item)</span><br><span class="line"></span><br><span class="line">str_pretty_result = json.dumps(</span><br><span class="line">    result_list, indent=<span class="number">4</span>, </span><br><span class="line">    sort_keys=<span class="literal">True</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;friends.json&quot;</span>,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(str_pretty_result)</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;11&#x2F;29: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h3 id=&quot;links-yaml&quot;&gt;&lt;a href=&quot;#links-yaml&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="json" scheme="https://kezunlin.me/tags/json/"/>
    
    <category term="yaml" scheme="https://kezunlin.me/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>python useful tools and code snippets</title>
    <link href="https://kezunlin.me/blog/python-useful-code-snippets/"/>
    <id>https://kezunlin.me/blog/python-useful-code-snippets/</id>
    <published>2019-11-22T02:05:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><h3 id="flip"><a href="#flip" class="headerlink" title="flip"></a>flip</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">image = cv2.imread(<span class="string">&quot;demo.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flipped Horizontally 水平翻转</span></span><br><span class="line">h_flip = cv2.flip(image, <span class="number">1</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;demo-h.jpg&quot;</span>, h_flip)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flipped Vertically 垂直翻转</span></span><br><span class="line">v_flip = cv2.flip(image, <span class="number">0</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;demo-v.jpg&quot;</span>, v_flip)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Flipped Horizontally &amp; Vertically 水平垂直翻转</span></span><br><span class="line">hv_flip = cv2.flip(image, -<span class="number">1</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;demo-hv.jpg&quot;</span>, hv_flip)</span><br></pre></td></tr></table></figure><h3 id="rotate"><a href="#rotate" class="headerlink" title="rotate"></a>rotate</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rotate_anti_90</span>(<span class="params">image</span>):</span><br><span class="line">    image = cv2.transpose(image)</span><br><span class="line">    image = cv2.flip(image, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rotate_anti_180</span>(<span class="params">image</span>):</span><br><span class="line">    image = cv2.flip(image, <span class="number">0</span>)</span><br><span class="line">    image = cv2.flip(image, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rotate_anti_270</span>(<span class="params">image</span>):</span><br><span class="line">    image = cv2.transpose(image)</span><br><span class="line">    image = cv2.flip(image, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rotate</span>(<span class="params">image, angle, center=<span class="literal">None</span>, scale=<span class="number">1.0</span></span>):</span><br><span class="line">    <span class="comment"># rotate by angle</span></span><br><span class="line">    (h, w) = image.shape[:<span class="number">2</span>] <span class="comment"># hwc</span></span><br><span class="line">    <span class="keyword">if</span> center <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        center = (w / <span class="number">2.</span>, h / <span class="number">2.</span>)</span><br><span class="line"></span><br><span class="line">    M = cv2.getRotationMatrix2D(center, angle, scale)</span><br><span class="line"></span><br><span class="line">    rotated = cv2.warpAffine(image, M, (w, h))</span><br><span class="line">    <span class="keyword">return</span> rotated</span><br></pre></td></tr></table></figure><h3 id="compression"><a href="#compression" class="headerlink" title="compression"></a>compression</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cv2.imwrite(full_image_path, image, [<span class="built_in">int</span>( cv2.IMWRITE_JPEG_QUALITY), <span class="number">100</span>]) <span class="comment"># no compression for jpg</span></span><br><span class="line"><span class="comment"># [int(cv2.IMWRITE_PNG_COMPRESSION), 9]  0-9 for png</span></span><br><span class="line"><span class="comment"># [int( cv2.IMWRITE_JPEG_QUALITY), 100]  0-100 for jpg</span></span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="get-video-info"><a href="#get-video-info" class="headerlink" title="get video info"></a>get video info</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> moviepy.editor <span class="keyword">import</span> VideoFileClip</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_video_info</span>(<span class="params">video_path</span>):</span><br><span class="line">    cap = cv2.VideoCapture(video_path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cap.isOpened():</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    frame_number = cap.get(cv2.CAP_PROP_FRAME_COUNT)</span><br><span class="line">    h  = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))</span><br><span class="line">    w  = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))</span><br><span class="line">    fps = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FPS))</span><br><span class="line"></span><br><span class="line">    cap.release() <span class="comment"># release video capture</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;fps = &quot;</span>,fps)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;frame_number = &quot;</span>,frame_number)</span><br><span class="line">    size = (w,h)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;size = &quot;</span>,size)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># frame number MAY BE WRONG ! so video time may be also wrong!</span></span><br><span class="line">    duration = <span class="built_in">int</span>(frame_number / fps)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;seconds=&quot;</span>,duration)</span><br><span class="line">    video_time = <span class="built_in">str</span>(datetime.timedelta(seconds = duration))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;video_time=&quot;</span>,video_time)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----------------------using VideoFileClip------------------&quot;</span>)</span><br><span class="line">    clip = VideoFileClip(video_path)</span><br><span class="line">    duration = clip.duration</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;video duration is &quot;</span>+ <span class="built_in">str</span>(duration) + <span class="string">&quot; seconds&quot;</span>)</span><br><span class="line">    video_time = <span class="built_in">str</span>(datetime.timedelta(seconds = <span class="built_in">int</span>(duration)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;video_time=&quot;</span>,video_time)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clip_video</span>():</span><br><span class="line">    clip = VideoFileClip(<span class="string">&quot;1.mp4&quot;</span>)</span><br><span class="line">    starting_point = <span class="number">120</span>  <span class="comment"># start at second minute</span></span><br><span class="line">    end_point = <span class="number">420</span>  <span class="comment"># record for 300 seconds (120+300)</span></span><br><span class="line">    subclip = clip.subclip(starting_point, end_point)</span><br><span class="line">    subclip.write_videofile(<span class="string">&quot;/path/to/new/video.mp4&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="numpy-argmax"><a href="#numpy-argmax" class="headerlink" title="numpy argmax"></a>numpy argmax</h3><p>numpy argmax for 2-dim and 3-dim </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># for 2-dim</span></span><br><span class="line">array = np.array([</span><br><span class="line">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">    [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],</span><br><span class="line">    [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">    [<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line">])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;array.shape=&quot;</span>,array.shape)</span><br><span class="line">result1 = array.argmax(axis=<span class="number">0</span>) <span class="comment"># hw  axis-0 ===&gt; h  shape=(w,) value range[0,1,2,3,4]</span></span><br><span class="line">result2 = array.argmax(axis=<span class="number">1</span>) <span class="comment"># hw  axis-0 ===&gt; w  shape=(h,) value range[0,1,2]</span></span><br><span class="line"><span class="built_in">print</span>(result1)</span><br><span class="line"><span class="built_in">print</span>(result1.shape)</span><br><span class="line"><span class="built_in">print</span>(result2)</span><br><span class="line"><span class="built_in">print</span>(result2.shape)</span><br></pre></td></tr></table></figure><p>output</p><pre><code>(&#39;array.shape=&#39;, (5, 3))[4 2 2](3,)[2 2 0 2 0](5,)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 3-dim</span></span><br><span class="line">array2 = np.array([</span><br><span class="line">    [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">    [<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>],</span><br><span class="line">    [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">    [<span class="number">1</span>,<span class="number">1</span>,<span class="number">10</span>]</span><br><span class="line">])</span><br><span class="line">image = np.array([</span><br><span class="line">    array,array2</span><br><span class="line">])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;image.shape=&quot;</span>,image.shape)</span><br><span class="line"><span class="built_in">print</span>(image)</span><br><span class="line"></span><br><span class="line">out = image.argmax(axis=<span class="number">0</span>) <span class="comment"># chw  axis=0 ===&gt; c  shape=(h,w) value range[0,1]</span></span><br><span class="line"><span class="built_in">print</span>(out)</span><br><span class="line"><span class="built_in">print</span>(out.shape)</span><br><span class="line"><span class="built_in">print</span>(out.dtype)</span><br></pre></td></tr></table></figure><p>output</p><pre><code>(&#39;image.shape=&#39;, (2, 5, 3))[[[ 1  2  3]  [ 4  5  6]  [ 9  8  7]  [ 1  2  3]  [10  1  2]] [[ 3  2  1]  [ 6  5  4]  [ 7  8  9]  [ 1  2  3]  [ 1  1 10]]][[1 0 0] [1 0 0] [0 0 1] [0 0 0] [0 0 1]](5, 3)int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for view segmentation output</span></span><br><span class="line">output = np.load(<span class="string">&#x27;output.npy&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;output.shape=&quot;</span>,output.shape) <span class="comment"># 1, 2, 512, 512</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;output.dtype=&quot;</span>,output.dtype)</span><br><span class="line"></span><br><span class="line">image = output[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;image.shape=&quot;</span>,image.shape) <span class="comment"># 2, 512, 512</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;image.dtype=&quot;</span>,image.dtype)</span><br><span class="line"></span><br><span class="line">out = image.argmax(axis=<span class="number">0</span>)     <span class="comment"># chw   axis=0 ===&gt; c </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;out.shape=&quot;</span>,out.shape) <span class="comment"># 512, 512</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;out.dtype=&quot;</span>,out.dtype) <span class="comment"># int64</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(out.<span class="built_in">min</span>())</span><br><span class="line"><span class="built_in">print</span>(out.<span class="built_in">max</span>())</span><br></pre></td></tr></table></figure><p>output</p><pre><code>(&#39;output.shape=&#39;, (1, 2, 512, 512))(&#39;output.dtype=&#39;, dtype(&#39;float32&#39;))(&#39;image.shape=&#39;, (2, 512, 512))(&#39;image.dtype=&#39;, dtype(&#39;float32&#39;))(&#39;out.shape=&#39;, (512, 512))(&#39;out.dtype=&#39;, dtype(&#39;int64&#39;))01</code></pre><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="pandas-quantile"><a href="#pandas-quantile" class="headerlink" title="pandas quantile"></a>pandas quantile</h3><h4 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">for array of length n:</span></span><br><span class="line"><span class="string">1. pos = 1 + (n-1)*p</span></span><br><span class="line"><span class="string">2. get integer part and fraction part of pos: i, f </span></span><br><span class="line"><span class="string">3. return a[i-1] + (a[i]-a[i-1])*f</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">quantile_p</span>(<span class="params">data, p, method=<span class="number">1</span></span>):</span><br><span class="line">    data.sort()</span><br><span class="line">    <span class="keyword">if</span> method == <span class="number">2</span>:</span><br><span class="line">        pos = <span class="number">1</span> + (<span class="built_in">len</span>(data)-<span class="number">1</span>)*p</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        pos = (<span class="built_in">len</span>(data) + <span class="number">1</span>)*p</span><br><span class="line">    i = <span class="built_in">int</span>(math.modf(pos)[<span class="number">1</span>])</span><br><span class="line">    f = pos - i</span><br><span class="line">    Q = data[i-<span class="number">1</span>] + (data[i]-data[i-<span class="number">1</span>])*f</span><br><span class="line">    Q1 = quantile_p(data, <span class="number">0.25</span>)</span><br><span class="line">    Q2 = quantile_p(data, <span class="number">0.5</span>)</span><br><span class="line">    Q3 = quantile_p(data, <span class="number">0.75</span>)</span><br><span class="line">    IQR = Q3 - Q1</span><br><span class="line">    <span class="keyword">return</span> Q1, Q2, Q3, IQR</span><br></pre></td></tr></table></figure><h4 id="quantile"><a href="#quantile" class="headerlink" title="quantile"></a>quantile</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">df = pd.Series(np.array([<span class="number">6</span>, <span class="number">47</span>, <span class="number">49</span>, <span class="number">15</span>, <span class="number">42</span>, <span class="number">41</span>, <span class="number">7</span>, <span class="number">39</span>, <span class="number">43</span>, <span class="number">40</span>, <span class="number">36</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dt)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Q1:&#x27;</span>, df.quantile(<span class="number">.25</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Q2:&#x27;</span>, df.quantile(<span class="number">.5</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Q3:&#x27;</span>, df.quantile(<span class="number">.75</span>))</span><br></pre></td></tr></table></figure><blockquote><p><code>pandas</code> use method 2: <code>pos = 1 + (n-1)*p</code></p></blockquote><h3 id="image-to-from-base64-string"><a href="#image-to-from-base64-string" class="headerlink" title="image to&#x2F;from base64 string"></a>image to&#x2F;from base64 string</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_base64_str_from_file</span>(<span class="params">filepath</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filepath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        bytes_content = f.read() <span class="comment"># bytes</span></span><br><span class="line">        bytes_64 = base64.b64encode(bytes_content)</span><br><span class="line">    <span class="keyword">return</span> bytes_64.decode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># bytes---&gt;str  (remove `b`)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_base64_str_to_file</span>(<span class="params">str_base64, to_file</span>):</span><br><span class="line">    bytes_64 = str_base64.encode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># str---&gt; bytes (add `b`)</span></span><br><span class="line">    bytes_content = base64.decodebytes(bytes_64) <span class="comment"># bytes</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(to_file, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(bytes_content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_base64</span>():</span><br><span class="line">    <span class="comment"># image to/from base64</span></span><br><span class="line">    image_path = <span class="string">&quot;images/1.jpg&quot;</span></span><br><span class="line">    str_base64 = get_base64_str_from_file(image_path)</span><br><span class="line">    save_base64_str_to_file(str_base64, <span class="string">&quot;images/2.jpg&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    test_base64()</span><br></pre></td></tr></table></figure><p>output </p><pre><code>OK</code></pre><h3 id="normal-string-to-from-base64-string"><a href="#normal-string-to-from-base64-string" class="headerlink" title="normal string to&#x2F;from base64 string"></a>normal string to&#x2F;from base64 string</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">str_to_base64</span>(<span class="params">normal_str</span>):</span><br><span class="line">    bytes_str = normal_str.encode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># str ===&gt; bytes</span></span><br><span class="line">    bytes_64 = base64.b64encode(bytes_str) <span class="comment"># bytes ===&gt; bytes</span></span><br><span class="line">    <span class="keyword">return</span> bytes_64.decode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># bytes ===&gt; str</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base64_to_str</span>(<span class="params">base64_str</span>):</span><br><span class="line">    bytes_64 = base64_str.encode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># str ===&gt; bytes</span></span><br><span class="line">    bytes_content = base64.decodebytes(bytes_64) <span class="comment"># bytes ===&gt; bytes</span></span><br><span class="line">    <span class="keyword">return</span> bytes_content.decode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># bytes ===&gt; str</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_base64</span>():</span><br><span class="line">    normal_str = <span class="string">&quot;Hello World !&quot;</span></span><br><span class="line">    str_base64 = str_to_base64(normal_str)</span><br><span class="line">    normal_str2 = base64_to_str(str_base64)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;normal_str = &quot;</span>,normal_str)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;str_base64 = &quot;</span>,str_base64)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;normal_str2 = &quot;</span>,normal_str2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    test_base64()</span><br></pre></td></tr></table></figure><p>output </p><pre><code>normal_str =  Hello World !str_base64 =  SGVsbG8gV29ybGQgIQ==normal_str2 =  Hello World !</code></pre><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="json-loads-and-dumps"><a href="#json-loads-and-dumps" class="headerlink" title="json loads and dumps"></a>json loads and dumps</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">str_text=<span class="string">&#x27;&#123;&quot;status&quot;:0,&quot;msg&quot;:&quot;成功&quot;&#125;&#x27;</span></span><br><span class="line">dict_json = json.loads(str_text)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(dict_json)) <span class="comment"># dict </span></span><br><span class="line"><span class="built_in">print</span>(dict_json)</span><br><span class="line"></span><br><span class="line">str_pretty_result = json.dumps(</span><br><span class="line">    dict_json, indent=<span class="number">4</span>, </span><br><span class="line">    sort_keys=<span class="literal">True</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(str_pretty_result)) <span class="comment"># str</span></span><br><span class="line"><span class="built_in">print</span>(str_pretty_result)</span><br></pre></td></tr></table></figure><p>output </p><pre><code>&lt;class &#39;dict&#39;&gt;&#123;&#39;status&#39;: 0, &#39;msg&#39;: &#39;成功&#39;&#125;&lt;class &#39;str&#39;&gt;&#123;    &quot;msg&quot;: &quot;成功&quot;,    &quot;status&quot;: 0&#125;</code></pre><blockquote><p>str to dict<br>dict to str</p></blockquote><h3 id="datetime"><a href="#datetime" class="headerlink" title="datetime"></a>datetime</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">demo_string_datetime</span>():</span><br><span class="line">    <span class="comment"># date_time = now.strftime(&quot;%m/%d/%Y, %H:%M:%S&quot;)</span></span><br><span class="line">    </span><br><span class="line">    datetime_str = <span class="string">&#x27;09/19/18 13:55:26&#x27;</span></span><br><span class="line">    datetime_object = datetime.datetime.strptime(datetime_str, <span class="string">&#x27;%m/%d/%y %H:%M:%S&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(datetime_object))</span><br><span class="line">    <span class="built_in">print</span>(datetime_object)  <span class="comment"># printed in default format</span></span><br><span class="line">    </span><br><span class="line">    datetime_str = <span class="string">&#x27;19910403&#x27;</span></span><br><span class="line">    datetime_object = datetime.datetime.strptime(datetime_str, <span class="string">&#x27;%Y%m%d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(datetime_object))</span><br><span class="line">    <span class="built_in">print</span>(datetime_object)  <span class="comment"># printed in default format</span></span><br><span class="line">    </span><br><span class="line">    datetime_result_str = datetime_object.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(datetime_result_str)</span><br></pre></td></tr></table></figure><h3 id="simplekml"><a href="#simplekml" class="headerlink" title="simplekml"></a>simplekml</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> simplekml</span><br><span class="line">kml = simplekml.Kml()</span><br><span class="line">kml.newpoint(name=<span class="string">&quot;point a&quot;</span>, coords=[(<span class="number">18.432314</span>,-<span class="number">33.988862</span>)])  <span class="comment"># lon, lat, optional height</span></span><br><span class="line">kml.newpoint(name=<span class="string">&quot;point b&quot;</span>, coords=[(<span class="number">28.432314</span>,-<span class="number">43.988862</span>)])  <span class="comment"># lon, lat, optional height</span></span><br><span class="line">kml.save(<span class="string">&quot;1.kml&quot;</span>)</span><br></pre></td></tr></table></figure><p>1.kml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">kml</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.opengis.net/kml/2.2&quot;</span> <span class="attr">xmlns:gx</span>=<span class="string">&quot;http://www.google.com/kml/ext/2.2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Document</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Placemark</span> <span class="attr">id</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>point a<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Point</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">coordinates</span>&gt;</span>18.432314,-33.988862,0.0<span class="tag">&lt;/<span class="name">coordinates</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Point</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Placemark</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Placemark</span> <span class="attr">id</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>point b<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Point</span> <span class="attr">id</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">coordinates</span>&gt;</span>28.432314,-43.988862,0.0<span class="tag">&lt;/<span class="name">coordinates</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Point</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Placemark</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Document</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">kml</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="python-requests"><a href="#python-requests" class="headerlink" title="python requests"></a>python requests</h3><h4 id="install"><a href="#install" class="headerlink" title="install"></a>install</h4><pre><code>pip install requestsconda install requests</code></pre><h3 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h3><pre><code>&gt;&gt;&gt; requests.get(&#39;https://httpbin.org/get&#39;)&gt;&gt;&gt; requests.post(&#39;https://httpbin.org/post&#39;, data=&#123;&#39;key&#39;:&#39;value&#39;&#125;)&gt;&gt;&gt; requests.put(&#39;https://httpbin.org/put&#39;, data=&#123;&#39;key&#39;:&#39;value&#39;&#125;)&gt;&gt;&gt; requests.delete(&#39;https://httpbin.org/delete&#39;)&gt;&gt;&gt; requests.head(&#39;https://httpbin.org/get&#39;)&gt;&gt;&gt; requests.patch(&#39;https://httpbin.org/patch&#39;, data=&#123;&#39;key&#39;:&#39;value&#39;&#125;)&gt;&gt;&gt; requests.options(&#39;https://httpbin.org/get&#39;)</code></pre><h4 id="code-example"><a href="#code-example" class="headerlink" title="code example"></a>code example</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>:<span class="string">&quot;21232f297a57a5a743894a0e4a801fc3&quot;</span>&#125;</span><br><span class="line">r = requests.post(</span><br><span class="line">    <span class="string">&quot;127.0.0.1/api/login&quot;</span>,</span><br><span class="line">    headers=&#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>, </span><br><span class="line">             <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;,</span><br><span class="line">    data=json.dumps(data)</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line">r = requests.post(</span><br><span class="line">    <span class="string">&quot;127.0.0.1/api/login&quot;</span>,</span><br><span class="line">    headers=&#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>, </span><br><span class="line">             <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;,</span><br><span class="line">    json=data</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session_id = <span class="string">&quot;157480890@kezunlin.me&quot;</span></span><br><span class="line">myheaders=&#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>, </span><br><span class="line">           <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, </span><br><span class="line">           <span class="string">&quot;session_id&quot;</span>:session_id&#125;</span><br><span class="line">r=requests.get(</span><br><span class="line">    <span class="string">&quot;127.0.0.1/api/book&quot;</span>, </span><br><span class="line">    headers=myheaders</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h3 id="requests-html"><a href="#requests-html" class="headerlink" title="requests-html"></a>requests-html</h3><p>requests-html for human</p><p>install </p><pre><code>pip install requests-html</code></pre><p>usage </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> requests_html <span class="keyword">import</span> HTMLSession</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>session = HTMLSession()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = session.get(<span class="string">&#x27;https://python.org/&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.html.find(<span class="string">&#x27;title&#x27;</span>, first=<span class="literal">True</span>).text</span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="selenium-chromedriver"><a href="#selenium-chromedriver" class="headerlink" title="selenium chromedriver"></a>selenium chromedriver</h3><p>versions </p><ul><li>Selenium – version 3.11.0</li><li>Chrome Browser – version 77</li><li>ChromeDriver – version 77</li></ul><p>steps</p><ol><li>download and install chrome browser 77</li><li>download <a href="https://chromedriver.storage.googleapis.com/77.0.3865.40/chromedriver_linux64.zip">ChromeDriver for Chrome Browser 77</a> </li><li>install and check version</li></ol><p>commands</p><pre><code>sudo cp chromedriver /usr/local/binchromedriver -vChromeDriver 77.0.3865.40</code></pre><h3 id="smote"><a href="#smote" class="headerlink" title="smote"></a>smote</h3><p>using smote to over sampling datasets</p><p>install </p><pre><code>pip install smote_variantspip install imbalanced_databases</code></pre><h3 id="class-member-vs-instance-member"><a href="#class-member-vs-instance-member" class="headerlink" title="class member vs instance member"></a>class member vs instance member</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Info</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    rects = []   <span class="comment"># by ref (object):  all instances has only 1 same copy.</span></span><br><span class="line">    counter = <span class="number">0</span>  <span class="comment"># by value: all instances has 1 different copy</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.new_rects = []</span><br><span class="line">        <span class="variable language_">self</span>.new_counter = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line">    it = Info()</span><br><span class="line">    <span class="keyword">return</span> it</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test1</span>():</span><br><span class="line">    info = func()</span><br><span class="line"></span><br><span class="line">    info.rects.extend([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">    info.counter += <span class="number">1</span></span><br><span class="line">    info.new_rects.extend([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">    info.new_counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;rect size&quot;</span>, <span class="built_in">len</span>(info.rects),<span class="built_in">len</span>(info.new_rects))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;counter&quot;</span>, info.counter,info.new_counter)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line">    info2 = func()</span><br><span class="line">    info2.rects.extend([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">    info2.counter += <span class="number">1</span></span><br><span class="line">    info2.new_rects.extend([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">    info2.new_counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;rect size&quot;</span>, <span class="built_in">len</span>(info2.rects),<span class="built_in">len</span>(info2.new_rects))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;counter&quot;</span>, info2.counter,info2.new_counter)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;--------------------------&quot;</span>)</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    test1()</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">rect size 5 5</span></span><br><span class="line"><span class="string">counter 1 1</span></span><br><span class="line"><span class="string">--------------------------</span></span><br><span class="line"><span class="string">rect size 10 5</span></span><br><span class="line"><span class="string">counter 1 1</span></span><br><span class="line"><span class="string">--------------------------</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="pyyaml"><a href="#pyyaml" class="headerlink" title="pyyaml"></a>pyyaml</h3><p>install </p><pre><code>pip install pyyamlpip freeze &gt; requirements.txt</code></pre><p>usage<br>cfg.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># cfg.yaml</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">true</span> <span class="comment"># debug or not (default: false)</span></span><br><span class="line"><span class="attr">input_dir:</span> <span class="string">&quot;./input/&quot;</span> <span class="comment"># input dir </span></span><br><span class="line"><span class="attr">output_dir:</span> <span class="string">&quot;./output/&quot;</span> <span class="comment"># output dir</span></span><br></pre></td></tr></table></figure><p>code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_cfg</span>(<span class="params">cfg_path=<span class="string">&#x27;./cfg.yaml&#x27;</span></span>):</span><br><span class="line">    cfg = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(cfg_path):</span><br><span class="line">        cfg = yaml.load(<span class="built_in">open</span>(cfg_path))</span><br><span class="line">        input_dir = cfg.get(<span class="string">&quot;input_dir&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; not exist&quot;</span>.<span class="built_in">format</span>(cfg_path))</span><br><span class="line">    <span class="keyword">return</span> cfg </span><br></pre></td></tr></table></figure><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- kzl in-article ad --><p><ins class="adsbygoogle"     style="display:block; text-align:center;"     data-ad-layout="in-article"     data-ad-format="fluid"     data-ad-client="ca-pub-5653382914441020"     data-ad-slot="7925631830"></ins></p><script>     (adsbygoogle = window.adsbygoogle || []).push({});</script><h3 id="cupy"><a href="#cupy" class="headerlink" title="cupy"></a>cupy</h3><blockquote><p>CuPy: NumPy-like API accelerated with CUDA.<br>CuPy: numpy on GPU</p></blockquote><h4 id="install-1"><a href="#install-1" class="headerlink" title="install"></a>install</h4><pre><code>(For CUDA 8.0)% pip install cupy-cuda80(For CUDA 9.0)% pip install cupy-cuda90(For CUDA 9.1)% pip install cupy-cuda91(For CUDA 9.2)% pip install cupy-cuda92(For CUDA 10.0)% pip install cupy-cuda100(For CUDA 10.1)% pip install cupy-cuda101(Install CuPy from source)% pip install cupy</code></pre><h4 id="usage-1"><a href="#usage-1" class="headerlink" title="usage"></a>usage</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> cupy <span class="keyword">as</span> cp</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = cp.arange(<span class="number">6</span>).reshape(<span class="number">2</span>, <span class="number">3</span>).astype(<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([[ <span class="number">0.</span>,  <span class="number">1.</span>,  <span class="number">2.</span>],</span><br><span class="line">       [ <span class="number">3.</span>,  <span class="number">4.</span>,  <span class="number">5.</span>]], dtype=float32)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line">array([  <span class="number">3.</span>,  <span class="number">12.</span>], dtype=float32)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = cp.arange(<span class="number">6</span>, dtype=<span class="string">&#x27;f&#x27;</span>).reshape(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = cp.arange(<span class="number">3</span>, dtype=<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kernel = cp.ElementwiseKernel(</span><br><span class="line"><span class="meta">... </span>    <span class="string">&#x27;float32 x, float32 y&#x27;</span>, <span class="string">&#x27;float32 z&#x27;</span>,</span><br><span class="line"><span class="meta">... </span>    <span class="string">&#x27;&#x27;&#x27;if (x - 2 &gt; y) &#123;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>      z = x * y;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    &#125; else &#123;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>      z = x + y;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    &#125;&#x27;&#x27;&#x27;</span>, <span class="string">&#x27;my_kernel&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kernel(x, y)</span><br><span class="line">array([[ <span class="number">0.</span>,  <span class="number">2.</span>,  <span class="number">4.</span>],</span><br><span class="line">       [ <span class="number">0.</span>,  <span class="number">4.</span>,  <span class="number">10.</span>]], dtype=float32)</span><br></pre></td></tr></table></figure><h3 id="SORT"><a href="#SORT" class="headerlink" title="SORT"></a>SORT</h3><p>SORT: A Simple, Online and Realtime Tracker based on Kalman</p><p>code </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sort <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#create instance of SORT</span></span><br><span class="line">mot_tracker = Sort() </span><br><span class="line"></span><br><span class="line"><span class="comment"># get detections</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># update SORT</span></span><br><span class="line">track_bbs_ids = mot_tracker.update(detections)</span><br><span class="line"></span><br><span class="line"><span class="comment"># track_bbs_ids is a np array where each row contains a valid bounding box and track_id (last column)</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://www.tutorialexample.com/a-beginner-guide-to-python-get-video-duration-with-opencv-python-tutorial/">a-beginner-guide-to-python-get-video-duration-with-opencv-python-tutorial</a></li><li><a href="https://www.learnopencv.com/read-write-and-display-a-video-using-opencv-cpp-python/">read-write-and-display-a-video-using-opencv-cpp-python</a></li><li><a href="https://www.cnblogs.com/brightyuxl/p/9815780.html">pandas quantile</a></li><li><a href="https://simplekml.readthedocs.io/en/latest/gettingstarted.html#getting-started">simplekml</a></li><li><a href="https://pythonhosted.org/pykml/tutorial.html">pykml</a></li><li><a href="https://realpython.com/python-requests/">python-requests</a></li><li><a href="https://stackoverflow.com/questions/6260457/using-headers-with-the-python-requests-librarys-get-method">using-headers-with-the-python-requests-librarys-get-method</a></li><li><a href="http://www.automationtestinghub.com/selenium-chromedriver/">selenium-chromedriver</a></li><li><a href="https://smote-variants.readthedocs.io/en/latest/installation.html">smote-variants</a></li><li><a href="https://github.com/gykovacs/smote_variants/blob/master/examples/000_binary_oversampling.ipynb">examples</a></li><li><a href="https://github.com/psf/requests-html">requests-html</a></li><li><a href="https://jeffknupp.com/blog/2012/11/13/is-python-callbyvalue-or-callbyreference-neither/">is-python-callbyvalue-or-callbyreference-neither</a></li><li><a href="https://robertheaton.com/2014/02/09/pythons-pass-by-object-reference-as-explained-by-philip-k-dick/">pythons-pass-by-object-reference-as-explained-by-philip-k-dick</a></li><li><a href="https://github.com/cupy/cupy">cupy</a></li><li><a href="https://cupy.chainer.org/">cupy</a></li><li><a href="https://github.com/abewley/sort">sort</a></li><li><a href="https://github.com/yasenh/sort-cpp">sort-cpp</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;11&#x2F;08: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;h3 id=&quot;flip&quot;&gt;&lt;a href=&quot;#flip&quot; class=&quot;headerlink&quot; title=&quot;flip&quot;</summary>
      
    
    
    
    <category term="python" scheme="https://kezunlin.me/categories/python/"/>
    
    
    <category term="json" scheme="https://kezunlin.me/tags/json/"/>
    
    <category term="simplekml" scheme="https://kezunlin.me/tags/simplekml/"/>
    
    <category term="smote" scheme="https://kezunlin.me/tags/smote/"/>
    
    <category term="yaml" scheme="https://kezunlin.me/tags/yaml/"/>
    
    <category term="requests" scheme="https://kezunlin.me/tags/requests/"/>
    
    <category term="base64" scheme="https://kezunlin.me/tags/base64/"/>
    
    <category term="cupy" scheme="https://kezunlin.me/tags/cupy/"/>
    
  </entry>
  
  <entry>
    <title>Why does the order of the loops affect performance when iterating over a 2D array ?</title>
    <link href="https://kezunlin.me/blog/Why%20does%20the%20order%20of%20the%20loops%20affect%20performance%20when%20iterating%20over%20a%202D%20array/"/>
    <id>https://kezunlin.me/blog/Why%20does%20the%20order%20of%20the%20loops%20affect%20performance%20when%20iterating%20over%20a%202D%20array/</id>
    <published>2019-11-22T00:41:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="loop-2d-array"><a href="#loop-2d-array" class="headerlink" title="loop 2d array"></a>loop 2d array</h2><p>Why does the order of the loops affect performance when iterating over a 2D array ?</p><ul><li><p><a href="https://stackoverflow.com/questions/9936132/why-does-the-order-of-the-loops-affect-performance-when-iterating-over-a-2d-arra?answertab=votes#tab-top">Why does the order of the loops affect performance when iterating over a 2D array?</a></p></li><li><p><a href="https://stackoverflow.com/questions/16699247/what-is-cache-friendly-code">What is “cache-friendly” code?</a></p></li></ul><p>When fetching a certain element of a matrix from memory, elements near it(15 ints) will be fetched as well and stored in a cache line(64 bytes &#x3D; 16 ints). </p><p>For simplicity, assume the cache comprises a single cache line which can contain 2 matrix elements and that when a given element is fetched from memory, the next one is too. Say we want to take the sum over all elements in the example 2x2 matrix above (lets call it M):</p><p>Exploiting the ordering (e.g. changing column index first in c++):</p><pre><code>M[0][0] (memory) + M[0][1] (cached) + M[1][0] (memory) + M[1][1] (cached)= 1 + 2 + 3 + 4--&gt; 2 cache hits, 2 memory accesses</code></pre><p>Not exploiting the ordering (e.g. changing row index first in c++):</p><pre><code>M[0][0] (memory) + M[1][0] (memory) + M[0][1] (memory) + M[1][1] (memory)= 1 + 3 + 2 + 4--&gt; 0 cache hits, 4 memory accesses</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://stackoverflow.com/questions/9936132/why-does-the-order-of-the-loops-affect-performance-when-iterating-over-a-2d-arra">why-does-the-order-of-the-loops-affect-performance-when-iterating-over-a-2d-arra</a></li><li><a href="https://stackoverflow.com/questions/16699247/what-is-cache-friendly-code">What is “cache-friendly” code?</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;11&#x2F;08: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;loop-2d-array&quot;&gt;&lt;a href=&quot;#loop-2d-array&quot; class=&quot;headerlink&quot; title=&quot;loop 2d array&quot;&gt;&lt;/a&gt;loop 2d array&lt;/h2&gt;&lt;p&gt;Why does the order of the </summary>
      
    
    
    
    <category term="cpp" scheme="https://kezunlin.me/categories/cpp/"/>
    
    
    <category term="stackoverflow" scheme="https://kezunlin.me/tags/stackoverflow/"/>
    
  </entry>
  
  <entry>
    <title>use article publisher artipub to publish your article to multiple platforms</title>
    <link href="https://kezunlin.me/blog/use-article-publisher-artipub-to-publish-your-article-to-multiple-platforms/"/>
    <id>https://kezunlin.me/blog/use-article-publisher-artipub-to-publish-your-article-to-multiple-platforms/</id>
    <published>2019-11-08T07:10:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><p>use article publisher <code>artipub</code> to publish your article to multiple platforms</p><ul><li>csdn</li><li>cnblog</li><li>zhihu</li><li>jianshu</li><li>segmentfault</li><li>toutiao</li><li>…</li></ul><h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get -y install mongodb</span><br><span class="line"><span class="built_in">sudo</span> npm install -g artipub --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h3><p>start server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">artipub start</span><br></pre></td></tr></table></figure><blockquote><p>by default, artipub will use <code>localhost:27017/artipub</code> as connection to mongodb.</p></blockquote><p>check mongodb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br><span class="line">&gt; show dbs</span><br><span class="line">admin    (empty)</span><br><span class="line">artipub  0.078GB</span><br><span class="line">db       (empty)</span><br><span class="line"><span class="built_in">local</span>    0.078GB</span><br></pre></td></tr></table></figure><p>now access <a href="http://localhost:8000/">http://localhost:8000</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/crawlab-team/artipub">https://github.com/crawlab-team/artipub</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;11&#x2F;08: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Guide&quot;&gt;&lt;a href=&quot;#Guide&quot; class=&quot;headerlink&quot; title=&quot;Guide&quot;&gt;&lt;/a&gt;Guide&lt;/h2&gt;&lt;p&gt;use article publisher &lt;code&gt;artipub&lt;/code&gt; to publish your</summary>
      
    
    
    
    <category term="web" scheme="https://kezunlin.me/categories/web/"/>
    
    
    <category term="artipub" scheme="https://kezunlin.me/tags/artipub/"/>
    
  </entry>
  
  <entry>
    <title>cpp i++ vs ++i for user defined class</title>
    <link href="https://kezunlin.me/blog/cpp-i-vs-i/"/>
    <id>https://kezunlin.me/blog/cpp-i-vs-i/</id>
    <published>2019-11-08T02:30:00.000Z</published>
    <updated>2024-10-14T05:39:28.667Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Code-Example"><a href="#Code-Example" class="headerlink" title="Code Example"></a>Code Example</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Integer</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Integer</span>(<span class="type">int</span> value): <span class="built_in">v</span>(value)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;default constructor&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Integer</span>(<span class="type">const</span> Integer &amp;other)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;copy constructor&quot;</span> &lt;&lt; endl;</span><br><span class="line">        v = other.v;</span><br><span class="line">    &#125;</span><br><span class="line">    Integer &amp;<span class="keyword">operator</span>=(<span class="type">const</span> Integer &amp;other)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;copy assignment&quot;</span> &lt;&lt; endl;</span><br><span class="line">        v = other.v;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ++i  first +1,then return new value</span></span><br><span class="line">    Integer &amp;<span class="keyword">operator</span>++()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Integer::operator++()&quot;</span> &lt;&lt; endl;</span><br><span class="line">        v++;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// i++  first save old value,then +1,last return old value</span></span><br><span class="line">    Integer <span class="keyword">operator</span>++(<span class="type">int</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Integer::operator++(int)&quot;</span> &lt;&lt; endl;</span><br><span class="line">        Integer old = *<span class="keyword">this</span>;</span><br><span class="line">        v++;</span><br><span class="line">        <span class="keyword">return</span> old;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;value &quot;</span> &lt;&lt; v &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> v;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_case</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Integer <span class="title">obj</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">    Integer obj2 = obj;</span><br><span class="line">    <span class="function">Integer <span class="title">obj3</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    obj3 = obj;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;--------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;++i&quot;</span> &lt;&lt; endl;</span><br><span class="line">    ++obj;</span><br><span class="line">    obj.<span class="built_in">output</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;i++&quot;</span> &lt;&lt; endl;</span><br><span class="line">    obj++;</span><br><span class="line">    obj.<span class="built_in">output</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test_case</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>output </p><pre><code>default constructorcopy constructordefault constructorcopy assignment--------------++iInteger::operator++()value 11i++Integer::operator++(int)copy constructorvalue 12</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://www.cnblogs.com/hellogiser/p/iplusplus_plusplusi.html">iplusplus_plusplusi</a></li></ul><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><ul><li>2019&#x2F;11&#x2F;08: created.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Code-Example&quot;&gt;&lt;a href=&quot;#Code-Example&quot; class=&quot;headerlink&quot; title=&quot;Code Example&quot;&gt;&lt;/a&gt;Code Example&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;ta</summary>
      
    
    
    
    <category term="cpp" scheme="https://kezunlin.me/categories/cpp/"/>
    
    
    <category term="increment" scheme="https://kezunlin.me/tags/increment/"/>
    
    <category term="decrement" scheme="https://kezunlin.me/tags/decrement/"/>
    
  </entry>
  
</feed>
